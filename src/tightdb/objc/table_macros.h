/*************************************************************************
 *
 * TIGHTDB CONFIDENTIAL
 * __________________
 *
 *  [2011] - [2014] TightDB Inc
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of TightDB Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to TightDB Incorporated
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from TightDB Incorporated.
 *
 **************************************************************************/

/*************************************************************************
 *
 * CAUTION:  DO NOT EDIT THIS FILE -- YOUR CHANGES WILL BE LOST!
 *
 * This file is generated by Cheetah from the following template:
 *
 *     table_macros.h.cheetah
 *
 **************************************************************************/

#import <tightdb/objc/TDBTable.h>
#import <tightdb/objc/TDBQuery.h>
#import <tightdb/objc/TDBRow.h>
#import <tightdb/objc/helper_macros.h>
#import <tightdb/objc/TDBDescriptor.h>
#import <tightdb/objc/TDBView.h>
#import <tightdb/objc/TDBColumnProxy.h>
#import <tightdb/objc/TDBMixed.h>
#import <tightdb/objc/PrivateTDB.h>



#define TIGHTDB_TABLE_DEF_1(TableName, CName1, CType1) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_1(TableName, CName1, CType1) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_1(TableName, CType1, CName1) \
TIGHTDB_TABLE_DEF_1(TableName, CType1, CName1) \
TIGHTDB_TABLE_IMPL_1(TableName, CType1, CName1)


#define TIGHTDB_TABLE_DEF_2(TableName, CName1, CType1, CName2, CType2) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_2(TableName, CName1, CType1, CName2, CType2) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_2(TableName, CType1, CName1, CType2, CName2) \
TIGHTDB_TABLE_DEF_2(TableName, CType1, CName1, CType2, CName2) \
TIGHTDB_TABLE_IMPL_2(TableName, CType1, CName1, CType2, CName2)


#define TIGHTDB_TABLE_DEF_3(TableName, CName1, CType1, CName2, CType2, CName3, CType3) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_3(TableName, CName1, CType1, CName2, CType2, CName3, CType3) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_3(TableName, CType1, CName1, CType2, CName2, CType3, CName3) \
TIGHTDB_TABLE_DEF_3(TableName, CType1, CName1, CType2, CName2, CType3, CName3) \
TIGHTDB_TABLE_IMPL_3(TableName, CType1, CName1, CType2, CName2, CType3, CName3)


#define TIGHTDB_TABLE_DEF_4(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_4(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_4(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4) \
TIGHTDB_TABLE_DEF_4(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4) \
TIGHTDB_TABLE_IMPL_4(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4)


#define TIGHTDB_TABLE_DEF_5(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_5(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_5(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5) \
TIGHTDB_TABLE_DEF_5(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5) \
TIGHTDB_TABLE_IMPL_5(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5)


#define TIGHTDB_TABLE_DEF_6(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_6(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_6(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6) \
TIGHTDB_TABLE_DEF_6(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6) \
TIGHTDB_TABLE_IMPL_6(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6)


#define TIGHTDB_TABLE_DEF_7(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_DEF(CName7, CType7) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName7, CType7) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
@property(nonatomic, strong) TableName##QueryAccessor##CName7* CName7; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_DEF(CName7, CType7) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_7(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
    TDBAccessor* _##CName7; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
        _##CName7 = [[TDBAccessor alloc] initWithRow:self columnId:6]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_IMPL(CName7, CType7) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
@synthesize CName7 = _CName7; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
        _CName7 = [[TableName##QueryAccessor##CName7 alloc] initWithColumn:6 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName7, CType7) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_IMPL(CName7, CType7) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 6, CName7, CType7) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    TIGHTDB_ADD_COLUMN(desc, CName7, CType7) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_7(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7) \
TIGHTDB_TABLE_DEF_7(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7) \
TIGHTDB_TABLE_IMPL_7(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7)


#define TIGHTDB_TABLE_DEF_8(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_DEF(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_DEF(CName8, CType8) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName8, CType8) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
@property(nonatomic, strong) TableName##QueryAccessor##CName7* CName7; \
@property(nonatomic, strong) TableName##QueryAccessor##CName8* CName8; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_DEF(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_DEF(CName8, CType8) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_8(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
    TDBAccessor* _##CName7; \
    TDBAccessor* _##CName8; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
        _##CName7 = [[TDBAccessor alloc] initWithRow:self columnId:6]; \
        _##CName8 = [[TDBAccessor alloc] initWithRow:self columnId:7]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_IMPL(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_IMPL(CName8, CType8) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
@synthesize CName7 = _CName7; \
@synthesize CName8 = _CName8; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
        _CName7 = [[TableName##QueryAccessor##CName7 alloc] initWithColumn:6 query:self]; \
        _CName8 = [[TableName##QueryAccessor##CName8 alloc] initWithColumn:7 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName8, CType8) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_IMPL(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_IMPL(CName8, CType8) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 6, CName7, CType7) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 7, CName8, CType8) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    TIGHTDB_ADD_COLUMN(desc, CName7, CType7) \
    TIGHTDB_ADD_COLUMN(desc, CName8, CType8) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_8(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8) \
TIGHTDB_TABLE_DEF_8(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8) \
TIGHTDB_TABLE_IMPL_8(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8)


#define TIGHTDB_TABLE_DEF_9(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_DEF(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_DEF(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_DEF(CName9, CType9) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName9, CType9) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
@property(nonatomic, strong) TableName##QueryAccessor##CName7* CName7; \
@property(nonatomic, strong) TableName##QueryAccessor##CName8* CName8; \
@property(nonatomic, strong) TableName##QueryAccessor##CName9* CName9; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_DEF(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_DEF(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_DEF(CName9, CType9) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_9(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
    TDBAccessor* _##CName7; \
    TDBAccessor* _##CName8; \
    TDBAccessor* _##CName9; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
        _##CName7 = [[TDBAccessor alloc] initWithRow:self columnId:6]; \
        _##CName8 = [[TDBAccessor alloc] initWithRow:self columnId:7]; \
        _##CName9 = [[TDBAccessor alloc] initWithRow:self columnId:8]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_IMPL(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_IMPL(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_IMPL(CName9, CType9) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
@synthesize CName7 = _CName7; \
@synthesize CName8 = _CName8; \
@synthesize CName9 = _CName9; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
        _CName7 = [[TableName##QueryAccessor##CName7 alloc] initWithColumn:6 query:self]; \
        _CName8 = [[TableName##QueryAccessor##CName8 alloc] initWithColumn:7 query:self]; \
        _CName9 = [[TableName##QueryAccessor##CName9 alloc] initWithColumn:8 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName9, CType9) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_IMPL(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_IMPL(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_IMPL(CName9, CType9) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 6, CName7, CType7) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 7, CName8, CType8) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 8, CName9, CType9) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    TIGHTDB_ADD_COLUMN(desc, CName7, CType7) \
    TIGHTDB_ADD_COLUMN(desc, CName8, CType8) \
    TIGHTDB_ADD_COLUMN(desc, CName9, CType9) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_9(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9) \
TIGHTDB_TABLE_DEF_9(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9) \
TIGHTDB_TABLE_IMPL_9(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9)


#define TIGHTDB_TABLE_DEF_10(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_DEF(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_DEF(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_DEF(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_DEF(CName10, CType10) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName10, CType10) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
@property(nonatomic, strong) TableName##QueryAccessor##CName7* CName7; \
@property(nonatomic, strong) TableName##QueryAccessor##CName8* CName8; \
@property(nonatomic, strong) TableName##QueryAccessor##CName9* CName9; \
@property(nonatomic, strong) TableName##QueryAccessor##CName10* CName10; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_DEF(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_DEF(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_DEF(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_DEF(CName10, CType10) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_10(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
    TDBAccessor* _##CName7; \
    TDBAccessor* _##CName8; \
    TDBAccessor* _##CName9; \
    TDBAccessor* _##CName10; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
        _##CName7 = [[TDBAccessor alloc] initWithRow:self columnId:6]; \
        _##CName8 = [[TDBAccessor alloc] initWithRow:self columnId:7]; \
        _##CName9 = [[TDBAccessor alloc] initWithRow:self columnId:8]; \
        _##CName10 = [[TDBAccessor alloc] initWithRow:self columnId:9]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_IMPL(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_IMPL(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_IMPL(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_IMPL(CName10, CType10) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
@synthesize CName7 = _CName7; \
@synthesize CName8 = _CName8; \
@synthesize CName9 = _CName9; \
@synthesize CName10 = _CName10; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
        _CName7 = [[TableName##QueryAccessor##CName7 alloc] initWithColumn:6 query:self]; \
        _CName8 = [[TableName##QueryAccessor##CName8 alloc] initWithColumn:7 query:self]; \
        _CName9 = [[TableName##QueryAccessor##CName9 alloc] initWithColumn:8 query:self]; \
        _CName10 = [[TableName##QueryAccessor##CName10 alloc] initWithColumn:9 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName10, CType10) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_IMPL(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_IMPL(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_IMPL(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_IMPL(CName10, CType10) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 6, CName7, CType7) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 7, CName8, CType8) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 8, CName9, CType9) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 9, CName10, CType10) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    TIGHTDB_ADD_COLUMN(desc, CName7, CType7) \
    TIGHTDB_ADD_COLUMN(desc, CName8, CType8) \
    TIGHTDB_ADD_COLUMN(desc, CName9, CType9) \
    TIGHTDB_ADD_COLUMN(desc, CName10, CType10) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_10(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10) \
TIGHTDB_TABLE_DEF_10(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10) \
TIGHTDB_TABLE_IMPL_10(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10)


#define TIGHTDB_TABLE_DEF_11(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_DEF(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_DEF(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_DEF(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_DEF(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_DEF(CName11, CType11) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName11, CType11) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
@property(nonatomic, strong) TableName##QueryAccessor##CName7* CName7; \
@property(nonatomic, strong) TableName##QueryAccessor##CName8* CName8; \
@property(nonatomic, strong) TableName##QueryAccessor##CName9* CName9; \
@property(nonatomic, strong) TableName##QueryAccessor##CName10* CName10; \
@property(nonatomic, strong) TableName##QueryAccessor##CName11* CName11; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_DEF(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_DEF(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_DEF(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_DEF(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_DEF(CName11, CType11) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_11(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
    TDBAccessor* _##CName7; \
    TDBAccessor* _##CName8; \
    TDBAccessor* _##CName9; \
    TDBAccessor* _##CName10; \
    TDBAccessor* _##CName11; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
        _##CName7 = [[TDBAccessor alloc] initWithRow:self columnId:6]; \
        _##CName8 = [[TDBAccessor alloc] initWithRow:self columnId:7]; \
        _##CName9 = [[TDBAccessor alloc] initWithRow:self columnId:8]; \
        _##CName10 = [[TDBAccessor alloc] initWithRow:self columnId:9]; \
        _##CName11 = [[TDBAccessor alloc] initWithRow:self columnId:10]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_IMPL(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_IMPL(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_IMPL(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_IMPL(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_IMPL(CName11, CType11) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
@synthesize CName7 = _CName7; \
@synthesize CName8 = _CName8; \
@synthesize CName9 = _CName9; \
@synthesize CName10 = _CName10; \
@synthesize CName11 = _CName11; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
        _CName7 = [[TableName##QueryAccessor##CName7 alloc] initWithColumn:6 query:self]; \
        _CName8 = [[TableName##QueryAccessor##CName8 alloc] initWithColumn:7 query:self]; \
        _CName9 = [[TableName##QueryAccessor##CName9 alloc] initWithColumn:8 query:self]; \
        _CName10 = [[TableName##QueryAccessor##CName10 alloc] initWithColumn:9 query:self]; \
        _CName11 = [[TableName##QueryAccessor##CName11 alloc] initWithColumn:10 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName11, CType11) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_IMPL(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_IMPL(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_IMPL(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_IMPL(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_IMPL(CName11, CType11) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 6, CName7, CType7) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 7, CName8, CType8) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 8, CName9, CType9) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 9, CName10, CType10) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 10, CName11, CType11) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    TIGHTDB_ADD_COLUMN(desc, CName7, CType7) \
    TIGHTDB_ADD_COLUMN(desc, CName8, CType8) \
    TIGHTDB_ADD_COLUMN(desc, CName9, CType9) \
    TIGHTDB_ADD_COLUMN(desc, CName10, CType10) \
    TIGHTDB_ADD_COLUMN(desc, CName11, CType11) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_11(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11) \
TIGHTDB_TABLE_DEF_11(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11) \
TIGHTDB_TABLE_IMPL_11(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11)


#define TIGHTDB_TABLE_DEF_12(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11, CName12, CType12) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_DEF(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_DEF(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_DEF(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_DEF(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_DEF(CName11, CType11) \
TIGHTDB_ROW_PROPERTY_DEF(CName12, CType12) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName11, CType11) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName12, CType12) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
@property(nonatomic, strong) TableName##QueryAccessor##CName7* CName7; \
@property(nonatomic, strong) TableName##QueryAccessor##CName8* CName8; \
@property(nonatomic, strong) TableName##QueryAccessor##CName9* CName9; \
@property(nonatomic, strong) TableName##QueryAccessor##CName10* CName10; \
@property(nonatomic, strong) TableName##QueryAccessor##CName11* CName11; \
@property(nonatomic, strong) TableName##QueryAccessor##CName12* CName12; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_DEF(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_DEF(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_DEF(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_DEF(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_DEF(CName11, CType11) \
TIGHTDB_COLUMN_PROXY_DEF(CName12, CType12) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_12(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11, CName12, CType12) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
    TDBAccessor* _##CName7; \
    TDBAccessor* _##CName8; \
    TDBAccessor* _##CName9; \
    TDBAccessor* _##CName10; \
    TDBAccessor* _##CName11; \
    TDBAccessor* _##CName12; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
        _##CName7 = [[TDBAccessor alloc] initWithRow:self columnId:6]; \
        _##CName8 = [[TDBAccessor alloc] initWithRow:self columnId:7]; \
        _##CName9 = [[TDBAccessor alloc] initWithRow:self columnId:8]; \
        _##CName10 = [[TDBAccessor alloc] initWithRow:self columnId:9]; \
        _##CName11 = [[TDBAccessor alloc] initWithRow:self columnId:10]; \
        _##CName12 = [[TDBAccessor alloc] initWithRow:self columnId:11]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_IMPL(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_IMPL(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_IMPL(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_IMPL(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_IMPL(CName11, CType11) \
TIGHTDB_ROW_PROPERTY_IMPL(CName12, CType12) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
@synthesize CName7 = _CName7; \
@synthesize CName8 = _CName8; \
@synthesize CName9 = _CName9; \
@synthesize CName10 = _CName10; \
@synthesize CName11 = _CName11; \
@synthesize CName12 = _CName12; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
        _CName7 = [[TableName##QueryAccessor##CName7 alloc] initWithColumn:6 query:self]; \
        _CName8 = [[TableName##QueryAccessor##CName8 alloc] initWithColumn:7 query:self]; \
        _CName9 = [[TableName##QueryAccessor##CName9 alloc] initWithColumn:8 query:self]; \
        _CName10 = [[TableName##QueryAccessor##CName10 alloc] initWithColumn:9 query:self]; \
        _CName11 = [[TableName##QueryAccessor##CName11 alloc] initWithColumn:10 query:self]; \
        _CName12 = [[TableName##QueryAccessor##CName12 alloc] initWithColumn:11 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName11, CType11) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName12, CType12) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_IMPL(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_IMPL(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_IMPL(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_IMPL(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_IMPL(CName11, CType11) \
TIGHTDB_COLUMN_PROXY_IMPL(CName12, CType12) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 11, CName12, CType12); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 11, CName12, CType12); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    TIGHTDB_COLUMN_INSERT(self, 11, ndx, CName12, CType12); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    TIGHTDB_COLUMN_INSERT(self, 11, ndx, CName12, CType12); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 6, CName7, CType7) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 7, CName8, CType8) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 8, CName9, CType9) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 9, CName10, CType10) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 10, CName11, CType11) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 11, CName12, CType12) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    TIGHTDB_ADD_COLUMN(desc, CName7, CType7) \
    TIGHTDB_ADD_COLUMN(desc, CName8, CType8) \
    TIGHTDB_ADD_COLUMN(desc, CName9, CType9) \
    TIGHTDB_ADD_COLUMN(desc, CName10, CType10) \
    TIGHTDB_ADD_COLUMN(desc, CName11, CType11) \
    TIGHTDB_ADD_COLUMN(desc, CName12, CType12) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_12(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12) \
TIGHTDB_TABLE_DEF_12(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12) \
TIGHTDB_TABLE_IMPL_12(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12)


#define TIGHTDB_TABLE_DEF_13(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11, CName12, CType12, CName13, CType13) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_DEF(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_DEF(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_DEF(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_DEF(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_DEF(CName11, CType11) \
TIGHTDB_ROW_PROPERTY_DEF(CName12, CType12) \
TIGHTDB_ROW_PROPERTY_DEF(CName13, CType13) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName11, CType11) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName12, CType12) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName13, CType13) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
@property(nonatomic, strong) TableName##QueryAccessor##CName7* CName7; \
@property(nonatomic, strong) TableName##QueryAccessor##CName8* CName8; \
@property(nonatomic, strong) TableName##QueryAccessor##CName9* CName9; \
@property(nonatomic, strong) TableName##QueryAccessor##CName10* CName10; \
@property(nonatomic, strong) TableName##QueryAccessor##CName11* CName11; \
@property(nonatomic, strong) TableName##QueryAccessor##CName12* CName12; \
@property(nonatomic, strong) TableName##QueryAccessor##CName13* CName13; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_DEF(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_DEF(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_DEF(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_DEF(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_DEF(CName11, CType11) \
TIGHTDB_COLUMN_PROXY_DEF(CName12, CType12) \
TIGHTDB_COLUMN_PROXY_DEF(CName13, CType13) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_13(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11, CName12, CType12, CName13, CType13) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
    TDBAccessor* _##CName7; \
    TDBAccessor* _##CName8; \
    TDBAccessor* _##CName9; \
    TDBAccessor* _##CName10; \
    TDBAccessor* _##CName11; \
    TDBAccessor* _##CName12; \
    TDBAccessor* _##CName13; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
        _##CName7 = [[TDBAccessor alloc] initWithRow:self columnId:6]; \
        _##CName8 = [[TDBAccessor alloc] initWithRow:self columnId:7]; \
        _##CName9 = [[TDBAccessor alloc] initWithRow:self columnId:8]; \
        _##CName10 = [[TDBAccessor alloc] initWithRow:self columnId:9]; \
        _##CName11 = [[TDBAccessor alloc] initWithRow:self columnId:10]; \
        _##CName12 = [[TDBAccessor alloc] initWithRow:self columnId:11]; \
        _##CName13 = [[TDBAccessor alloc] initWithRow:self columnId:12]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_IMPL(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_IMPL(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_IMPL(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_IMPL(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_IMPL(CName11, CType11) \
TIGHTDB_ROW_PROPERTY_IMPL(CName12, CType12) \
TIGHTDB_ROW_PROPERTY_IMPL(CName13, CType13) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
@synthesize CName7 = _CName7; \
@synthesize CName8 = _CName8; \
@synthesize CName9 = _CName9; \
@synthesize CName10 = _CName10; \
@synthesize CName11 = _CName11; \
@synthesize CName12 = _CName12; \
@synthesize CName13 = _CName13; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
        _CName7 = [[TableName##QueryAccessor##CName7 alloc] initWithColumn:6 query:self]; \
        _CName8 = [[TableName##QueryAccessor##CName8 alloc] initWithColumn:7 query:self]; \
        _CName9 = [[TableName##QueryAccessor##CName9 alloc] initWithColumn:8 query:self]; \
        _CName10 = [[TableName##QueryAccessor##CName10 alloc] initWithColumn:9 query:self]; \
        _CName11 = [[TableName##QueryAccessor##CName11 alloc] initWithColumn:10 query:self]; \
        _CName12 = [[TableName##QueryAccessor##CName12 alloc] initWithColumn:11 query:self]; \
        _CName13 = [[TableName##QueryAccessor##CName13 alloc] initWithColumn:12 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName11, CType11) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName12, CType12) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName13, CType13) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_IMPL(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_IMPL(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_IMPL(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_IMPL(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_IMPL(CName11, CType11) \
TIGHTDB_COLUMN_PROXY_IMPL(CName12, CType12) \
TIGHTDB_COLUMN_PROXY_IMPL(CName13, CType13) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 11, CName12, CType12); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 12, CName13, CType13); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 11, CName12, CType12); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 12, CName13, CType13); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    TIGHTDB_COLUMN_INSERT(self, 11, ndx, CName12, CType12); \
    TIGHTDB_COLUMN_INSERT(self, 12, ndx, CName13, CType13); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    TIGHTDB_COLUMN_INSERT(self, 11, ndx, CName12, CType12); \
    TIGHTDB_COLUMN_INSERT(self, 12, ndx, CName13, CType13); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 6, CName7, CType7) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 7, CName8, CType8) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 8, CName9, CType9) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 9, CName10, CType10) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 10, CName11, CType11) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 11, CName12, CType12) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 12, CName13, CType13) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    TIGHTDB_ADD_COLUMN(desc, CName7, CType7) \
    TIGHTDB_ADD_COLUMN(desc, CName8, CType8) \
    TIGHTDB_ADD_COLUMN(desc, CName9, CType9) \
    TIGHTDB_ADD_COLUMN(desc, CName10, CType10) \
    TIGHTDB_ADD_COLUMN(desc, CName11, CType11) \
    TIGHTDB_ADD_COLUMN(desc, CName12, CType12) \
    TIGHTDB_ADD_COLUMN(desc, CName13, CType13) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_13(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12, CType13, CName13) \
TIGHTDB_TABLE_DEF_13(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12, CType13, CName13) \
TIGHTDB_TABLE_IMPL_13(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12, CType13, CName13)


#define TIGHTDB_TABLE_DEF_14(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11, CName12, CType12, CName13, CType13, CName14, CType14) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_DEF(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_DEF(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_DEF(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_DEF(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_DEF(CName11, CType11) \
TIGHTDB_ROW_PROPERTY_DEF(CName12, CType12) \
TIGHTDB_ROW_PROPERTY_DEF(CName13, CType13) \
TIGHTDB_ROW_PROPERTY_DEF(CName14, CType14) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName11, CType11) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName12, CType12) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName13, CType13) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName14, CType14) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
@property(nonatomic, strong) TableName##QueryAccessor##CName7* CName7; \
@property(nonatomic, strong) TableName##QueryAccessor##CName8* CName8; \
@property(nonatomic, strong) TableName##QueryAccessor##CName9* CName9; \
@property(nonatomic, strong) TableName##QueryAccessor##CName10* CName10; \
@property(nonatomic, strong) TableName##QueryAccessor##CName11* CName11; \
@property(nonatomic, strong) TableName##QueryAccessor##CName12* CName12; \
@property(nonatomic, strong) TableName##QueryAccessor##CName13* CName13; \
@property(nonatomic, strong) TableName##QueryAccessor##CName14* CName14; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_DEF(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_DEF(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_DEF(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_DEF(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_DEF(CName11, CType11) \
TIGHTDB_COLUMN_PROXY_DEF(CName12, CType12) \
TIGHTDB_COLUMN_PROXY_DEF(CName13, CType13) \
TIGHTDB_COLUMN_PROXY_DEF(CName14, CType14) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 CName14:(TIGHTDB_ARG_TYPE(CType14))CName14; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 CName14:(TIGHTDB_ARG_TYPE(CType14))CName14; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_14(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11, CName12, CType12, CName13, CType13, CName14, CType14) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
    TDBAccessor* _##CName7; \
    TDBAccessor* _##CName8; \
    TDBAccessor* _##CName9; \
    TDBAccessor* _##CName10; \
    TDBAccessor* _##CName11; \
    TDBAccessor* _##CName12; \
    TDBAccessor* _##CName13; \
    TDBAccessor* _##CName14; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
        _##CName7 = [[TDBAccessor alloc] initWithRow:self columnId:6]; \
        _##CName8 = [[TDBAccessor alloc] initWithRow:self columnId:7]; \
        _##CName9 = [[TDBAccessor alloc] initWithRow:self columnId:8]; \
        _##CName10 = [[TDBAccessor alloc] initWithRow:self columnId:9]; \
        _##CName11 = [[TDBAccessor alloc] initWithRow:self columnId:10]; \
        _##CName12 = [[TDBAccessor alloc] initWithRow:self columnId:11]; \
        _##CName13 = [[TDBAccessor alloc] initWithRow:self columnId:12]; \
        _##CName14 = [[TDBAccessor alloc] initWithRow:self columnId:13]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_IMPL(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_IMPL(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_IMPL(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_IMPL(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_IMPL(CName11, CType11) \
TIGHTDB_ROW_PROPERTY_IMPL(CName12, CType12) \
TIGHTDB_ROW_PROPERTY_IMPL(CName13, CType13) \
TIGHTDB_ROW_PROPERTY_IMPL(CName14, CType14) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
@synthesize CName7 = _CName7; \
@synthesize CName8 = _CName8; \
@synthesize CName9 = _CName9; \
@synthesize CName10 = _CName10; \
@synthesize CName11 = _CName11; \
@synthesize CName12 = _CName12; \
@synthesize CName13 = _CName13; \
@synthesize CName14 = _CName14; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
        _CName7 = [[TableName##QueryAccessor##CName7 alloc] initWithColumn:6 query:self]; \
        _CName8 = [[TableName##QueryAccessor##CName8 alloc] initWithColumn:7 query:self]; \
        _CName9 = [[TableName##QueryAccessor##CName9 alloc] initWithColumn:8 query:self]; \
        _CName10 = [[TableName##QueryAccessor##CName10 alloc] initWithColumn:9 query:self]; \
        _CName11 = [[TableName##QueryAccessor##CName11 alloc] initWithColumn:10 query:self]; \
        _CName12 = [[TableName##QueryAccessor##CName12 alloc] initWithColumn:11 query:self]; \
        _CName13 = [[TableName##QueryAccessor##CName13 alloc] initWithColumn:12 query:self]; \
        _CName14 = [[TableName##QueryAccessor##CName14 alloc] initWithColumn:13 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName11, CType11) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName12, CType12) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName13, CType13) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName14, CType14) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_IMPL(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_IMPL(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_IMPL(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_IMPL(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_IMPL(CName11, CType11) \
TIGHTDB_COLUMN_PROXY_IMPL(CName12, CType12) \
TIGHTDB_COLUMN_PROXY_IMPL(CName13, CType13) \
TIGHTDB_COLUMN_PROXY_IMPL(CName14, CType14) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 11, CName12, CType12); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 12, CName13, CType13); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 13, CName14, CType14); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 11, CName12, CType12); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 12, CName13, CType13); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 13, CName14, CType14); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 CName14:(TIGHTDB_ARG_TYPE(CType14))CName14 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    TIGHTDB_COLUMN_INSERT(self, 11, ndx, CName12, CType12); \
    TIGHTDB_COLUMN_INSERT(self, 12, ndx, CName13, CType13); \
    TIGHTDB_COLUMN_INSERT(self, 13, ndx, CName14, CType14); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 CName14:(TIGHTDB_ARG_TYPE(CType14))CName14 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    TIGHTDB_COLUMN_INSERT(self, 11, ndx, CName12, CType12); \
    TIGHTDB_COLUMN_INSERT(self, 12, ndx, CName13, CType13); \
    TIGHTDB_COLUMN_INSERT(self, 13, ndx, CName14, CType14); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 6, CName7, CType7) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 7, CName8, CType8) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 8, CName9, CType9) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 9, CName10, CType10) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 10, CName11, CType11) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 11, CName12, CType12) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 12, CName13, CType13) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 13, CName14, CType14) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    TIGHTDB_ADD_COLUMN(desc, CName7, CType7) \
    TIGHTDB_ADD_COLUMN(desc, CName8, CType8) \
    TIGHTDB_ADD_COLUMN(desc, CName9, CType9) \
    TIGHTDB_ADD_COLUMN(desc, CName10, CType10) \
    TIGHTDB_ADD_COLUMN(desc, CName11, CType11) \
    TIGHTDB_ADD_COLUMN(desc, CName12, CType12) \
    TIGHTDB_ADD_COLUMN(desc, CName13, CType13) \
    TIGHTDB_ADD_COLUMN(desc, CName14, CType14) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_14(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12, CType13, CName13, CType14, CName14) \
TIGHTDB_TABLE_DEF_14(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12, CType13, CName13, CType14, CName14) \
TIGHTDB_TABLE_IMPL_14(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12, CType13, CName13, CType14, CName14)


#define TIGHTDB_TABLE_DEF_15(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11, CName12, CType12, CName13, CType13, CName14, CType14, CName15, CType15) \
@interface TableName##Row: TDBRow \
TIGHTDB_ROW_PROPERTY_DEF(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_DEF(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_DEF(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_DEF(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_DEF(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_DEF(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_DEF(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_DEF(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_DEF(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_DEF(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_DEF(CName11, CType11) \
TIGHTDB_ROW_PROPERTY_DEF(CName12, CType12) \
TIGHTDB_ROW_PROPERTY_DEF(CName13, CType13) \
TIGHTDB_ROW_PROPERTY_DEF(CName14, CType14) \
TIGHTDB_ROW_PROPERTY_DEF(CName15, CType15) \
@end \
@class TableName##Query; \
@class TableName##View; \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName11, CType11) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName12, CType12) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName13, CType13) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName14, CType14) \
TIGHTDB_QUERY_ACCESSOR_DEF(TableName, CName15, CType15) \
@interface TableName##Query: TDBQuery \
@property(nonatomic, strong) TableName##QueryAccessor##CName1* CName1; \
@property(nonatomic, strong) TableName##QueryAccessor##CName2* CName2; \
@property(nonatomic, strong) TableName##QueryAccessor##CName3* CName3; \
@property(nonatomic, strong) TableName##QueryAccessor##CName4* CName4; \
@property(nonatomic, strong) TableName##QueryAccessor##CName5* CName5; \
@property(nonatomic, strong) TableName##QueryAccessor##CName6* CName6; \
@property(nonatomic, strong) TableName##QueryAccessor##CName7* CName7; \
@property(nonatomic, strong) TableName##QueryAccessor##CName8* CName8; \
@property(nonatomic, strong) TableName##QueryAccessor##CName9* CName9; \
@property(nonatomic, strong) TableName##QueryAccessor##CName10* CName10; \
@property(nonatomic, strong) TableName##QueryAccessor##CName11* CName11; \
@property(nonatomic, strong) TableName##QueryAccessor##CName12* CName12; \
@property(nonatomic, strong) TableName##QueryAccessor##CName13* CName13; \
@property(nonatomic, strong) TableName##QueryAccessor##CName14* CName14; \
@property(nonatomic, strong) TableName##QueryAccessor##CName15* CName15; \
-(TableName##Query*)group; \
-(TableName##Query*)Or; \
-(TableName##Query*)endGroup; \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column; \
-(TableName##Query*)parent; \
-(TableName##View*)findAll; \
@end \
@interface TableName: TDBTable \
TIGHTDB_COLUMN_PROXY_DEF(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_DEF(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_DEF(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_DEF(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_DEF(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_DEF(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_DEF(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_DEF(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_DEF(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_DEF(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_DEF(CName11, CType11) \
TIGHTDB_COLUMN_PROXY_DEF(CName12, CType12) \
TIGHTDB_COLUMN_PROXY_DEF(CName13, CType13) \
TIGHTDB_COLUMN_PROXY_DEF(CName14, CType14) \
TIGHTDB_COLUMN_PROXY_DEF(CName15, CType15) \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 CName14:(TIGHTDB_ARG_TYPE(CType14))CName14 CName15:(TIGHTDB_ARG_TYPE(CType15))CName15; \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 CName14:(TIGHTDB_ARG_TYPE(CType14))CName14 CName15:(TIGHTDB_ARG_TYPE(CType15))CName15; \
-(TableName##Query*)where; \
-(TableName##Row*)addEmptyRow; \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx; \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
-(TableName##Row*)rowAtLastIndex; \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx; \
@end \
@interface TableName##View: TDBView \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx; \
@end

#define TIGHTDB_TABLE_IMPL_15(TableName, CName1, CType1, CName2, CType2, CName3, CType3, CName4, CType4, CName5, CType5, CName6, CType6, CName7, CType7, CName8, CType8, CName9, CType9, CName10, CType10, CName11, CType11, CName12, CType12, CName13, CType13, CName14, CType14, CName15, CType15) \
@implementation TableName##Row \
{ \
    TDBAccessor* _##CName1; \
    TDBAccessor* _##CName2; \
    TDBAccessor* _##CName3; \
    TDBAccessor* _##CName4; \
    TDBAccessor* _##CName5; \
    TDBAccessor* _##CName6; \
    TDBAccessor* _##CName7; \
    TDBAccessor* _##CName8; \
    TDBAccessor* _##CName9; \
    TDBAccessor* _##CName10; \
    TDBAccessor* _##CName11; \
    TDBAccessor* _##CName12; \
    TDBAccessor* _##CName13; \
    TDBAccessor* _##CName14; \
    TDBAccessor* _##CName15; \
} \
-(id)initWithTable:(TDBTable*)table ndx:(NSUInteger)ndx \
{ \
    self = [super initWithTable:table ndx:ndx]; \
    if (self) { \
        _##CName1 = [[TDBAccessor alloc] initWithRow:self columnId:0]; \
        _##CName2 = [[TDBAccessor alloc] initWithRow:self columnId:1]; \
        _##CName3 = [[TDBAccessor alloc] initWithRow:self columnId:2]; \
        _##CName4 = [[TDBAccessor alloc] initWithRow:self columnId:3]; \
        _##CName5 = [[TDBAccessor alloc] initWithRow:self columnId:4]; \
        _##CName6 = [[TDBAccessor alloc] initWithRow:self columnId:5]; \
        _##CName7 = [[TDBAccessor alloc] initWithRow:self columnId:6]; \
        _##CName8 = [[TDBAccessor alloc] initWithRow:self columnId:7]; \
        _##CName9 = [[TDBAccessor alloc] initWithRow:self columnId:8]; \
        _##CName10 = [[TDBAccessor alloc] initWithRow:self columnId:9]; \
        _##CName11 = [[TDBAccessor alloc] initWithRow:self columnId:10]; \
        _##CName12 = [[TDBAccessor alloc] initWithRow:self columnId:11]; \
        _##CName13 = [[TDBAccessor alloc] initWithRow:self columnId:12]; \
        _##CName14 = [[TDBAccessor alloc] initWithRow:self columnId:13]; \
        _##CName15 = [[TDBAccessor alloc] initWithRow:self columnId:14]; \
    } \
    return self; \
} \
TIGHTDB_ROW_PROPERTY_IMPL(CName1, CType1) \
TIGHTDB_ROW_PROPERTY_IMPL(CName2, CType2) \
TIGHTDB_ROW_PROPERTY_IMPL(CName3, CType3) \
TIGHTDB_ROW_PROPERTY_IMPL(CName4, CType4) \
TIGHTDB_ROW_PROPERTY_IMPL(CName5, CType5) \
TIGHTDB_ROW_PROPERTY_IMPL(CName6, CType6) \
TIGHTDB_ROW_PROPERTY_IMPL(CName7, CType7) \
TIGHTDB_ROW_PROPERTY_IMPL(CName8, CType8) \
TIGHTDB_ROW_PROPERTY_IMPL(CName9, CType9) \
TIGHTDB_ROW_PROPERTY_IMPL(CName10, CType10) \
TIGHTDB_ROW_PROPERTY_IMPL(CName11, CType11) \
TIGHTDB_ROW_PROPERTY_IMPL(CName12, CType12) \
TIGHTDB_ROW_PROPERTY_IMPL(CName13, CType13) \
TIGHTDB_ROW_PROPERTY_IMPL(CName14, CType14) \
TIGHTDB_ROW_PROPERTY_IMPL(CName15, CType15) \
@end \
@implementation TableName##Query \
{ \
    TableName##Row* tmpRow; \
} \
-(long)getFastEnumStart \
{ \
    return [self findFirstRowFromIndex:0]; \
} \
-(long)incrementFastEnum:(long)ndx \
{ \
    return [self findFirstRowFromIndex:ndx]; \
} \
-(TableName##Row*)getRow:(long)ndx \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:ndx]; \
} \
@synthesize CName1 = _CName1; \
@synthesize CName2 = _CName2; \
@synthesize CName3 = _CName3; \
@synthesize CName4 = _CName4; \
@synthesize CName5 = _CName5; \
@synthesize CName6 = _CName6; \
@synthesize CName7 = _CName7; \
@synthesize CName8 = _CName8; \
@synthesize CName9 = _CName9; \
@synthesize CName10 = _CName10; \
@synthesize CName11 = _CName11; \
@synthesize CName12 = _CName12; \
@synthesize CName13 = _CName13; \
@synthesize CName14 = _CName14; \
@synthesize CName15 = _CName15; \
-(id)initWithTable:(TDBTable*)table \
{ \
    self = [super initWithTable:table]; \
    if (self) { \
        _CName1 = [[TableName##QueryAccessor##CName1 alloc] initWithColumn:0 query:self]; \
        _CName2 = [[TableName##QueryAccessor##CName2 alloc] initWithColumn:1 query:self]; \
        _CName3 = [[TableName##QueryAccessor##CName3 alloc] initWithColumn:2 query:self]; \
        _CName4 = [[TableName##QueryAccessor##CName4 alloc] initWithColumn:3 query:self]; \
        _CName5 = [[TableName##QueryAccessor##CName5 alloc] initWithColumn:4 query:self]; \
        _CName6 = [[TableName##QueryAccessor##CName6 alloc] initWithColumn:5 query:self]; \
        _CName7 = [[TableName##QueryAccessor##CName7 alloc] initWithColumn:6 query:self]; \
        _CName8 = [[TableName##QueryAccessor##CName8 alloc] initWithColumn:7 query:self]; \
        _CName9 = [[TableName##QueryAccessor##CName9 alloc] initWithColumn:8 query:self]; \
        _CName10 = [[TableName##QueryAccessor##CName10 alloc] initWithColumn:9 query:self]; \
        _CName11 = [[TableName##QueryAccessor##CName11 alloc] initWithColumn:10 query:self]; \
        _CName12 = [[TableName##QueryAccessor##CName12 alloc] initWithColumn:11 query:self]; \
        _CName13 = [[TableName##QueryAccessor##CName13 alloc] initWithColumn:12 query:self]; \
        _CName14 = [[TableName##QueryAccessor##CName14 alloc] initWithColumn:13 query:self]; \
        _CName15 = [[TableName##QueryAccessor##CName15 alloc] initWithColumn:14 query:self]; \
    } \
    return self; \
} \
-(TableName##Query*)group \
{ \
    [super group]; \
    return self; \
} \
-(TableName##Query*)Or \
{ \
    [super Or]; \
    return self; \
} \
-(TableName##Query*)endGroup \
{ \
    [super endGroup]; \
    return self; \
} \
-(TableName##Query*)subtableInColumnWithIndex:(NSUInteger)column \
{ \
    [super subtableInColumnWithIndex:column]; \
    return self; \
} \
-(TableName##Query*)parent \
{ \
    [super parent]; \
    return self; \
} \
-(TableName##View*)findAll \
{ \
    return [[TableName##View alloc] _initWithQuery:self]; \
} \
@end \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName1, CType1) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName2, CType2) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName3, CType3) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName4, CType4) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName5, CType5) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName6, CType6) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName7, CType7) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName8, CType8) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName9, CType9) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName10, CType10) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName11, CType11) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName12, CType12) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName13, CType13) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName14, CType14) \
TIGHTDB_QUERY_ACCESSOR_IMPL(TableName, CName15, CType15) \
@implementation TableName \
{ \
    TableName##Row* tmpRow; \
} \
TIGHTDB_COLUMN_PROXY_IMPL(CName1, CType1) \
TIGHTDB_COLUMN_PROXY_IMPL(CName2, CType2) \
TIGHTDB_COLUMN_PROXY_IMPL(CName3, CType3) \
TIGHTDB_COLUMN_PROXY_IMPL(CName4, CType4) \
TIGHTDB_COLUMN_PROXY_IMPL(CName5, CType5) \
TIGHTDB_COLUMN_PROXY_IMPL(CName6, CType6) \
TIGHTDB_COLUMN_PROXY_IMPL(CName7, CType7) \
TIGHTDB_COLUMN_PROXY_IMPL(CName8, CType8) \
TIGHTDB_COLUMN_PROXY_IMPL(CName9, CType9) \
TIGHTDB_COLUMN_PROXY_IMPL(CName10, CType10) \
TIGHTDB_COLUMN_PROXY_IMPL(CName11, CType11) \
TIGHTDB_COLUMN_PROXY_IMPL(CName12, CType12) \
TIGHTDB_COLUMN_PROXY_IMPL(CName13, CType13) \
TIGHTDB_COLUMN_PROXY_IMPL(CName14, CType14) \
TIGHTDB_COLUMN_PROXY_IMPL(CName15, CType15) \
\
-(id)_initRaw \
{ \
    self = [super _initRaw]; \
    if (!self) \
        return nil; \
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 11, CName12, CType12); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 12, CName13, CType13); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 13, CName14, CType14); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 14, CName15, CType15); \
    return self; \
} \
-(id)init \
{ \
    self = [super init]; \
    if (!self) \
        return nil; \
    if (![self _addColumns]) \
        return nil; \
\
    TIGHTDB_COLUMN_PROXY_INIT(self, 0, CName1, CType1); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 1, CName2, CType2); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 2, CName3, CType3); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 3, CName4, CType4); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 4, CName5, CType5); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 5, CName6, CType6); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 6, CName7, CType7); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 7, CName8, CType8); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 8, CName9, CType9); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 9, CName10, CType10); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 10, CName11, CType11); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 11, CName12, CType12); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 12, CName13, CType13); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 13, CName14, CType14); \
    TIGHTDB_COLUMN_PROXY_INIT(self, 14, CName15, CType15); \
    return self; \
} \
-(void)add##CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 CName14:(TIGHTDB_ARG_TYPE(CType14))CName14 CName15:(TIGHTDB_ARG_TYPE(CType15))CName15 \
{ \
    NSUInteger ndx = self.rowCount; \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    TIGHTDB_COLUMN_INSERT(self, 11, ndx, CName12, CType12); \
    TIGHTDB_COLUMN_INSERT(self, 12, ndx, CName13, CType13); \
    TIGHTDB_COLUMN_INSERT(self, 13, ndx, CName14, CType14); \
    TIGHTDB_COLUMN_INSERT(self, 14, ndx, CName15, CType15); \
    [self TDBInsertDone]; \
} \
-(void)insertEmptyRowAtIndex:(NSUInteger)ndx CName1:(TIGHTDB_ARG_TYPE(CType1))CName1 CName2:(TIGHTDB_ARG_TYPE(CType2))CName2 CName3:(TIGHTDB_ARG_TYPE(CType3))CName3 CName4:(TIGHTDB_ARG_TYPE(CType4))CName4 CName5:(TIGHTDB_ARG_TYPE(CType5))CName5 CName6:(TIGHTDB_ARG_TYPE(CType6))CName6 CName7:(TIGHTDB_ARG_TYPE(CType7))CName7 CName8:(TIGHTDB_ARG_TYPE(CType8))CName8 CName9:(TIGHTDB_ARG_TYPE(CType9))CName9 CName10:(TIGHTDB_ARG_TYPE(CType10))CName10 CName11:(TIGHTDB_ARG_TYPE(CType11))CName11 CName12:(TIGHTDB_ARG_TYPE(CType12))CName12 CName13:(TIGHTDB_ARG_TYPE(CType13))CName13 CName14:(TIGHTDB_ARG_TYPE(CType14))CName14 CName15:(TIGHTDB_ARG_TYPE(CType15))CName15 \
{ \
    TIGHTDB_COLUMN_INSERT(self, 0, ndx, CName1, CType1); \
    TIGHTDB_COLUMN_INSERT(self, 1, ndx, CName2, CType2); \
    TIGHTDB_COLUMN_INSERT(self, 2, ndx, CName3, CType3); \
    TIGHTDB_COLUMN_INSERT(self, 3, ndx, CName4, CType4); \
    TIGHTDB_COLUMN_INSERT(self, 4, ndx, CName5, CType5); \
    TIGHTDB_COLUMN_INSERT(self, 5, ndx, CName6, CType6); \
    TIGHTDB_COLUMN_INSERT(self, 6, ndx, CName7, CType7); \
    TIGHTDB_COLUMN_INSERT(self, 7, ndx, CName8, CType8); \
    TIGHTDB_COLUMN_INSERT(self, 8, ndx, CName9, CType9); \
    TIGHTDB_COLUMN_INSERT(self, 9, ndx, CName10, CType10); \
    TIGHTDB_COLUMN_INSERT(self, 10, ndx, CName11, CType11); \
    TIGHTDB_COLUMN_INSERT(self, 11, ndx, CName12, CType12); \
    TIGHTDB_COLUMN_INSERT(self, 12, ndx, CName13, CType13); \
    TIGHTDB_COLUMN_INSERT(self, 13, ndx, CName14, CType14); \
    TIGHTDB_COLUMN_INSERT(self, 14, ndx, CName15, CType15); \
    [self TDBInsertDone]; \
} \
-(TableName##Query*)where \
{ \
    return [[TableName##Query alloc] initWithTable:self]; \
} \
-(TableName##Row*)addEmptyRow \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:[super TDBAddEmptyRow]]; \
} \
-(TableName##Row*)objectAtIndexedSubscript:(NSUInteger)ndx \
{ \
	return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TableName##Row*)rowAtLastIndex \
{ \
    return [[TableName##Row alloc] initWithTable:self ndx:self.rowCount-1]; \
} \
-(TableName##Row*)insertEmptyRowAtIndex:(NSUInteger)ndx \
{ \
    [super insertEmptyRowAtIndex:ndx]; \
    return [[TableName##Row alloc] initWithTable:self ndx:ndx]; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self ndx:0]; \
} \
+(BOOL)_checkType:(TDBDescriptor*)desc \
{ \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 0, CName1, CType1) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 1, CName2, CType2) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 2, CName3, CType3) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 3, CName4, CType4) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 4, CName5, CType5) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 5, CName6, CType6) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 6, CName7, CType7) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 7, CName8, CType8) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 8, CName9, CType9) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 9, CName10, CType10) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 10, CName11, CType11) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 11, CName12, CType12) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 12, CName13, CType13) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 13, CName14, CType14) \
    TIGHTDB_CHECK_COLUMN_TYPE(desc, 14, CName15, CType15) \
    return YES; \
} \
-(BOOL)_checkType \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _checkType:desc]) \
        return NO; \
    return YES; \
} \
+(BOOL)_addColumns:(TDBDescriptor*)desc \
{ \
    TIGHTDB_ADD_COLUMN(desc, CName1, CType1) \
    TIGHTDB_ADD_COLUMN(desc, CName2, CType2) \
    TIGHTDB_ADD_COLUMN(desc, CName3, CType3) \
    TIGHTDB_ADD_COLUMN(desc, CName4, CType4) \
    TIGHTDB_ADD_COLUMN(desc, CName5, CType5) \
    TIGHTDB_ADD_COLUMN(desc, CName6, CType6) \
    TIGHTDB_ADD_COLUMN(desc, CName7, CType7) \
    TIGHTDB_ADD_COLUMN(desc, CName8, CType8) \
    TIGHTDB_ADD_COLUMN(desc, CName9, CType9) \
    TIGHTDB_ADD_COLUMN(desc, CName10, CType10) \
    TIGHTDB_ADD_COLUMN(desc, CName11, CType11) \
    TIGHTDB_ADD_COLUMN(desc, CName12, CType12) \
    TIGHTDB_ADD_COLUMN(desc, CName13, CType13) \
    TIGHTDB_ADD_COLUMN(desc, CName14, CType14) \
    TIGHTDB_ADD_COLUMN(desc, CName15, CType15) \
    return YES; \
} \
-(BOOL)_addColumns \
{ \
    TDBDescriptor* desc = self.descriptor; \
    if (!desc) \
        return NO; \
    if (![TableName _addColumns:desc]) \
        return NO; \
    return YES; \
} \
@end \
@implementation TableName##View \
{ \
    TableName##Row* tmpRow; \
} \
-(TDBRow*)getRow \
{ \
    return tmpRow = [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:0]]; \
} \
-(TableName##Row*)rowAtIndex:(NSUInteger)ndx \
{ \
    return [[TableName##Row alloc] initWithTable:self.originTable ndx:[self rowIndexInOriginTableForRowAtIndex:ndx]]; \
} \
@end

#define TIGHTDB_TABLE_15(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12, CType13, CName13, CType14, CName14, CType15, CName15) \
TIGHTDB_TABLE_DEF_15(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12, CType13, CName13, CType14, CName14, CType15, CName15) \
TIGHTDB_TABLE_IMPL_15(TableName, CType1, CName1, CType2, CName2, CType3, CName3, CType4, CName4, CType5, CName5, CType6, CName6, CType7, CName7, CType8, CName8, CType9, CName9, CType10, CName10, CType11, CName11, CType12, CName12, CType13, CName13, CType14, CName14, CType15, CName15)
