#
# Obj-C reference documentation for TableView class
#

ID         : class_dyn_tableview
TITLE      : TableView (dynamic)
SUMMARY    : *g_dyn_view_intro_summary
DESCR      : *g_dyn_view_intro_descr
SEE        :
EXAMPLES   :
- DESCR:
  CODE     : ex_objc_tableview_dynamic_intro
IGNORE     : []                   # List of method-ids to ignore

CATEGORIES :

- State:
  METHODS:
  - g_dyn_view_size:
      NAME     : count
      SUMMARY  : *g_dyn_table_size_summary
      DESCR    : *g_dyn_table_size_descr
      SIGNATURE: (size_t)count
      RETURN:
        TYPES  : size_t
        DESCR  : The number of rows.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_size
        DESCR  :

  - g_dyn_view_is_empty:
      NAME     : isEmpty
      SUMMARY  : *g_dyn_view_is_empty_summary
      DESCR    : *g_dyn_view_is_empty_descr
      SIGNATURE: (BOOL)isEmpty
      RETURN:
        TYPES  : BOOL
        DESCR  : <code>true</code> if empty, <code>false</code> otherwise.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_is_empty
        DESCR  :

- View:
  METHODS:
  - g_dyn_view_clear:
      NAME     : clear
      SUMMARY  : *g_dyn_table_clear_summary
      DESCR    : *g_dyn_view_clear_descr
      SIGNATURE: (void)clear
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_clear
        DESCR  :

- Columns:
  METHODS:
  - g_dyn_view_get_column_count:
      TODO     : soon

      NAME     : getColumnCount 
      SUMMARY  : *g_dyn_table_get_column_count_summary
      DESCR    : *g_dyn_table_get_column_count_descr
      RETURN:
        TYPES  : size_t
        DESCR  : The number of columns.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_column_count
        DESCR  :

  - g_dyn_view_get_column_name:
      TODO     : later

      NAME     : getColumnName
      SUMMARY  : *g_dyn_table_get_column_name_summary
      DESCR    : *g_dyn_table_get_column_name_descr
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : The column index.
      RETURN:
        TYPES  : const char*
        DESCR  : The column name.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_column_name
        DESCR  :

  - g_dyn_view_get_column_index:
      TODO     : later

      NAME     : getColumnIndex
      SUMMARY  : *g_dyn_table_get_column_index_summary
      DESCR    : *g_dyn_table_get_column_index_descr
      PARAMS:
      - NAME   : column_name
        TYPES  : const char*
        DESCR  : The column name.
      RETURN:
        TYPES  : size_t
        DESCR  : The column index.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_column_index
        DESCR  :

  - g_dyn_view_get_column_type:
      TODO     : later

      NAME     : getColumnType
      SUMMARY  : *g_dyn_table_get_column_type_summary
      DESCR    : Gets the column type. #*g_dyn_table_get_column_type_descr
      CONST    : True
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : The column index.
      RETURN:
        TYPES  : DataType
        DESCR  : The column type.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_column_type
        DESCR  :


- Rows:
  METHODS:
  - g_dyn_view_get_source_ndx:
      NAME     : getSourceNdx
      SUMMARY  : *g_dyn_view_get_source_ndx_summary
      DESCR    : *g_dyn_view_get_source_ndx_descr
      SIGNATURE: (size_t)getSourceNdx:(size_t)ndx
      CONST    : True
      PARAMS:
      - NAME   : ndx
        TYPES  : size_t
        DESCR  : *g_dyn_view_get_source_ndx_parm1_descr
      RETURN:
        TYPES  : size_t
        DESCR  : *g_dyn_view_get_source_ndx_return1_descr
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_source_ndx
        DESCR  :

  - g_dyn_view_remove_row:
      NAME     : remove
      SUMMARY  : *g_dyn_table_remove_row_summary
      DESCR    : *g_dyn_table_remove_row_descr
      SIGNATURE: (void)remove:(size_t)ndx;
      PARAMS:
      - NAME   : ndx
        TYPES  : size_t
        DESCR  : *g_dyn_view_remove_row_parm1_descr
      EXAMPLES:
      - CODE   : ex_objc_dyn_table_remove
        DESCR  :

  - g_dyn_view_remove_last_row:
      NAME     : removeLast
      SUMMARY  : *g_dyn_table_remove_last_row_summary
      DESCR    : *g_dyn_table_remove_last_row_descr
      SIGNATURE: (void)removeLast;
      EXAMPLES:
      - CODE   : ex_objc_dyn_table_remove_last_row
        DESCR  :


- Values:
  METHODS:
  - g_dyn_view_get_float:
      TODO     : soon
  - g_dyn_view_get_double:
      TODO     : soon
  - g_dyn_view_get_date:
      NAME     : getDate
  - g_dyn_view_get_string:
      NAME     : getString
  - g_dyn_view_get_binary:
      TODO     : soon
  - g_dyn_view_get_mixed:
      TODO     : soon
  - g_dyn_view_get_mixed_type:
      TODO     : soon
  - g_dyn_view_get_subtable_const:
      IGNORE   : ""
  - g_dyn_view_get_subtable:
      TODO     : soon
  - g_dyn_view_get_bool:
      NAME     : getBool
  - g_dyn_view_get_int:
      NAME     : get
      TITLE    : get*
      SUMMARY  : *g_dyn_table_get_xxx_summary
      DESCR    : *g_dyn_table_get_xxx_descr
      SIGNATURE: |
                 (BOOL)getBool:(size_t)col_ndx ndx:(size_t)ndx
                 (int64_t)get:(size_t)col_ndx ndx:(size_t)ndx
                 (time_t)getDate:(size_t)col_ndx ndx:(size_t)ndx
                 (NSString *)getString:(size_t)col_ndx ndx:(size_t)ndx
      CONST    : True
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : The column index.
      - NAME   : row_ndx
        TYPES  : size_t
        DESCR  : The row index.
      RETURN:
        TYPES  : [BOOL, int64_t, float, double, time_t, NSString*, BinaryData, Mixed, DataType, TableRef, ConstTableRef]
        DESCR  : The value.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_xxx
        DESCR  :

  - g_dyn_view_set_bool:
      TODO     : soon
  - g_dyn_view_set_int:
      TODO     : soon
  - g_dyn_view_set_float:
      TODO     : soon
  - g_dyn_view_set_double:
      TODO     : soon
  - g_dyn_view_set_enum:
      TODO     : soon
  - g_dyn_view_set_date:
      TODO     : soon
  - g_dyn_view_set_string:
      TODO     : soon
  - g_dyn_view_set_binary:
      TODO     : soon
  - g_dyn_view_set_mixed:
      TODO     : soon
      NAME     : setMixed
      
      TITLE    : set*
      SUMMARY  : *g_dyn_table_set_xxx_summary
      DESCR    : *g_dyn_table_set_xxx_descr
      SIGNATURE: |
                 void set_bool(size_t column_ndx, size_t row_ndx, bool value);
                 void set_int(size_t column_ndx, size_t row_ndx, int64_t value);
                 void set_float(size_t column_ndx, size_t row_ndx, float value);
                 void set_double(size_t column_ndx, size_t row_ndx, double value);
                 template<class E> void set_enum(size_t column_ndx, size_t row_ndx, E value);
                 void set_date(size_t column_ndx, size_t row_ndx, time_t value);
                 void set_string(size_t column_ndx, size_t row_ndx, const char* value);
                 void set_binary(size_t column_ndx, size_t row_ndx, const char* value, size_t len);
                 void set_mixed(size_t column_ndx, size_t row_ndx, Mixed value);
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : The column index.
      - NAME   : row_ndx
        TYPES  : size_t
        DESCR  : The row index.
      - NAME   : value
        TYPES  : [BOOL, int64_t, float, double, time_t, const char*, Mixed]
        DESCR  : The value.
      - NAME   : len
        TYPES  : size_t
        DESCR  : Size in bytes of binary value.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_set_xxx
        DESCR  :

- Sub-tables:
  METHODS:
  - g_dyn_view_get_subtable_size:
      TODO     : later

      NAME     : get_subtable_size
      SUMMARY  : *g_dyn_table_get_subtable_size_summary
      DESCR    : *g_dyn_table_get_subtable_size_descr
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : The column index.
      - NAME   : row_ndx
        TYPES  : size_t
        DESCR  : The row index.
      RETURN:
        TYPES  : size_t
        DESCR  : Number of rows.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_subtable
        DESCR  :

  - g_dyn_view_clear_subtable:
      TODO     : later

      TITLE    : clear_subtable
      SUMMARY  : *g_dyn_table_clear_subtable_summary
      DESCR    : *g_dyn_table_clear_subtable_descr
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : The column index.
      - NAME   : row_ndx
        TYPES  : size_t
        DESCR  : The row index.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_clear_subtable
        DESCR  :


- Searching:
  METHODS:
  - g_dyn_view_find_first_bool:
      TODO     : soon
  - g_dyn_view_find_first_int:
      TODO     : soon
  - g_dyn_view_find_first_float:
      TODO     : soon
  - g_dyn_view_find_first_double:
      TODO     : soon
  - g_dyn_view_find_first_date:
      TODO     : soon
  - g_dyn_view_find_first_string:
      TODO     : soon
      NAME     : findFirstString

      TITLE    : find*
      SUMMARY  : *g_dyn_table_find_first_xxx_summary
      DESCR    : *g_dyn_table_find_first_xxx_descr
      SIGNATURE: |
                 size_t find_first_int(size_t column_ndx, int64_t value) const;
                 size_t find_first_bool(size_t column_ndx, bool value) const;
                 size_t find_first_float(size_t column_ndx, float value) const;
                 size_t find_first_double(size_t column_ndx, double value) const;
                 size_t find_first_date(size_t column_ndx, time_t value) const;
                 size_t find_first_string(size_t column_ndx, const char* value) const;
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : The column index.
      - NAME   : value
        TYPES  : [BOOL, int64_t, float, double, time_t, const char*]
        DESCR  : The value.
      RETURN:
        TYPES  : size_t
        DESCR  : "The row index or <code>tightdb::not_found</code> (equal to <code>std::size_t(-1)</code>) if there is no match."
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_find_first_xxx
        DESCR  :
        
  - g_dyn_view_find_all_bool_const:
      IGNORE   : ""
  - g_dyn_view_find_all_int_const:
      IGNORE   : ""
  - g_dyn_view_find_all_float_const:
      IGNORE   : ""
  - g_dyn_view_find_all_double_const:
      IGNORE   : ""
  - g_dyn_view_find_all_date_const:
      IGNORE   : ""
  - g_dyn_view_find_all_string_const:
      IGNORE   : ""

  - g_dyn_view_find_all_bool:
      NAME     : findAllBool
  - g_dyn_view_find_all_int:
      NAME     : findAllInt
  - g_dyn_view_find_all_float:
      NAME     : findAllFloat
  - g_dyn_view_find_all_double:
      NAME     : findAllDouble
  - g_dyn_view_find_all_date:
      NAME     : findAllDate
  - g_dyn_view_find_all_string:
      NAME     : findAllString
      TODO     : soon
      TITLE    : findAll*
      SUMMARY  : *g_dyn_table_find_all_xxx_summary
      DESCR    : *g_dyn_table_find_all_xxx_descr
      SIGNATURE: |
                 TableView      find_all_int(size_t column_ndx, int64_t value);
                 TableView      find_all_bool(size_t column_ndx, bool value);
                 TableView      find_all_date(size_t column_ndx, time_t value);
                 TableView      find_all_string(size_t column_ndx, const char* value);
                 TableView      find_all_float(size_t column_ndx, float value);
                 TableView      find_all_double(size_t column_ndx, double value);
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : The column index.
      - NAME   : value
        TYPES  : [BOOL, int64_t, float, double, time_t, const char*]
        DESCR  : The value.
      RETURN:
        TYPES  : [TableView, ConstTableView]
        DESCR  : The view.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_find_all_xxx
        DESCR  :

  - g_dyn_view_sort:
      TODO     : later

      NAME     : sort
      SUMMARY  : *g_dyn_view_get_sorted_view_summary
      DESCR    : *g_dyn_view_get_sorted_view_desc
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : The column index.
      - NAME   : ascending
        TYPES  : bool
        DESCR  : "If <code>true</code>, rows are sorted ascending. Default: <code>true</code>."
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_sort
        DESCR  :


- Aggregates:
  METHODS:
  - g_dyn_view_sum:
      TODO     : later
  - g_dyn_view_sum_float:
      TODO     : later
  - g_dyn_view_sum_double:
      TODO     : later

      NAMES    : [sum, sum_float, sum_double]
      SUMMARY  : *g_dyn_view_sum_summary
      DESCR    : *g_dyn_view_sum_descr
      SIGNATURE: |
                 int64_t sum(size_t column_ndx) const;
                 double sum_float(size_t column_ndx) const;
                 double sum_double(size_t column_ndx) const;
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index.
      RETURN:
        TYPES  : [int64_t, float, double]
        DESCR  : The sum.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_sum
        DESCR  :

  - g_dyn_view_maximum:
      TODO     : later
  - g_dyn_view_maximum_float:
      TODO     : later
  - g_dyn_view_maximum_double:
      TODO     : later

      NAMES    : [maximum, maximum_float, maximum_double]
      SUMMARY  : *g_dyn_view_maximum_summary
      DESCR    : *g_dyn_view_maximum_descr
      CONST    : True
      SIGNATURE: |
                 int64_t maximum(size_t column_ndx) const;
                 double  maximum_float(size_t column_ndx) const;
                 double  maximum_double(size_t column_ndx) const;
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index.
      RETURN:
        TYPES  : [int64_t, double]
        DESCR  : The maximum value.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_maximum
        DESCR  :

  - g_dyn_view_minimum:
      TODO     : later
  - g_dyn_view_minimum_float:
      TODO     : later
  - g_dyn_view_minimum_double:
      TODO     : later
      
      NAMES    : [minimum, minimum_float, minimum_double]
      SUMMARY  : *g_dyn_view_minimum_summary
      DESCR    : *g_dyn_view_minimum_descr
      CONST    : True
      SIGNATURE: |
                 int64_t minimum(size_t column_ndx) const;
                 double  minimum_float(size_t column_ndx) const;
                 double  minimum_double(size_t column_ndx) const;
      PARAMS:
      - NAME   : column_ndx
        TYPES  : size_t
        DESCR  : Column index.
      RETURN:
        TYPES  : [int64_t, double]
        DESCR  : The minimum value.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_minimum
        DESCR  :


- Dump:
  METHODS:
  - g_dyn_view_to_json:
      TODO     : later

      NAME     : to_json
      SUMMARY  : *g_dyn_table_to_json_summary
      DESCR    : *g_dyn_view_to_json_descr
      PARAMS:
      - NAME   : out
        TYPES  : std::ostream&
        DESCR  : Output stream.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_to_json
        DESCR  :

  - g_dyn_view_to_string:
      TODO     : later

      NAME     : to_string
      SUMMARY  : *g_dyn_view_to_string_summary
      DESCR    : *g_dyn_view_to_string_descr
      PARAMS:
      - NAME   : out
        TYPES  : std::ostream&
        DESCR  : Output stream.
      - NAME   : limit
        TYPES  : size_t
        DESCR  : "The number of rows to convert. Default: 500."
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_to_string
        DESCR  :
