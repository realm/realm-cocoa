#
# Obj-C reference documentation for RLMView class
#

ID         : class_dyn_tableview
TITLE      : RLMView (dynamic)
SUMMARY    : The RLMView class
DESCR      : >
             Queries and searches can return <code>RLMView</code>
             objects, which works as virtual tables containing just
             the matched rows. You can interact with a
             <code>TBDView</code> just as a regular table.

             A {@link class_dyn_tableview} is implicitely linked to a
             {@link class_dyn_table}.  All changes to the view will
             propagate to the original table. This includes operations
             like updating values and deleting rows.

             It is possible to create multiple views for one table. Updates to one
             view propagates to the original table and is visible from other
             views linked to the same table. Deletion of rows through a view
             propagates to the original table and cause any other views
             linked to the same table to become detached from the table
             and your application is likely to crash if you access the data in
             the other views.
SEE        :
EXAMPLES   :
- DESCR:
  CODE     : ex_objc_tableview_dynamic_intro
IGNORE     : []                   # List of method-ids to ignore

CATEGORIES :

- State:
  METHODS:
  - g_dyn_view_size:
      NAME     : rowCount
      SUMMARY  : *g_dyn_table_size_summary
      DESCR    : *g_dyn_table_size_descr
      SIGNATURE: "@property (nonatomic, readonly) NSUInteger rowCount"
      RETURN:
        TYPES  : NSUInteger
        DESCR  : The number of rows.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_size
        DESCR  : Is a @property

- View:
  METHODS:
  - g_dyn_view_clear:
      NAME     : removeAllRows
      SUMMARY  : *g_dyn_table_clear_summary
      DESCR    : *g_dyn_view_clear_descr
      SIGNATURE: (void)removeAllRows
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_clear
        DESCR  :

- Columns:
  METHODS:
  - g_dyn_view_get_column_count:
      NAME     : columnCount
      SUMMARY  : *g_dyn_table_get_column_count_summary
      DESCR    : *g_dyn_table_get_column_count_descr
      SIGNATURE: "@property (nonatomic, readonly) NSUInteger columnCount"
      RETURN:
        TYPES  : NSUInteger
        DESCR  : The number of columns.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_column_count
        DESCR  :

  - g_dyn_view_get_column_name:
      TODO     : later
      NAME     : "columnNameOfColumn:"
      SUMMARY  : *g_dyn_table_get_column_name_summary
      DESCR    : *g_dyn_table_get_column_name_descr
      SIGNATURE: (NSString *)columnNameOfColumn:(NSUInteger)colIndex
      PARAMS:
      - NAME   : colIndex
        TYPES  : NSUInteger
        DESCR  : The column index.
      RETURN:
        TYPES  : NSString *
        DESCR  : The column name.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_column_name
        DESCR  :

  - g_dyn_view_get_column_index:
      TODO     : later
      NAME     : "indexOfColumnWithName:"
      SUMMARY  : *g_dyn_table_get_column_index_summary
      DESCR    : *g_dyn_table_get_column_index_descr
      SIGNATURE: (NSUInteger)indexOfColumnWithName:(NSString *)name
      PARAMS:
      - NAME   : name
        TYPES  : NSString *
        DESCR  : The column name.
      RETURN:
        TYPES  : NSUInteger
        DESCR  : The column index.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_column_index
        DESCR  :

  - g_dyn_view_get_column_type:
      NAME     : "columnTypeOfColumnWithIndex:"
      SUMMARY  : *g_dyn_table_get_column_type_summary
      DESCR    :
      - TEXT   : *g_dyn_table_get_column_type_descr1
      - TEXT   : *objc_column_types
      SIGNATURE: (RLMType)columnTypeOfColumnWithIndex:(NSUInteger)colIndex
      PARAMS:
      - NAME   : colIndex
        TYPES  : NSUInteger
        DESCR  : The column index.
      RETURN:
        TYPES  : RLMType
        DESCR  : The column type.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_column_type
        DESCR  :


- Rows:
  METHODS:
  - g_dyn_view_cursor_at_index:
      NAME     : "rowAtIndex:"
      SUMMARY  : Returns the row at a specified row index.
      DESCR    : This method returns the row at the specified row index.
      SIGNATURE: (RLMRow *)rowAtIndex:(NSUInteger)rowIndex
      PARAMS:
      - NAME   : rowIndex
        TYPES  : NSUInteger
        DESCR  : The row index.
      RETURN:
        TYPES  : RLMRow *
        DESCR  : The row.

  - objc_dyn_view_first:
      NAME     : firstRow
      SUMMARY  : Returns the first row.
      DESCR    : This method returns the first row in the view.
      SIGNATURE: (RLMRow *)
      RETURN:
        TYPES  : RLMRow *
        DESCR  : The row.

  - objc_dyn_view_last:
      NAME     : "lastRow:"
      SUMMARY  : Returns the last row.
      DESCR    : This method returns the last row in the view.
      SIGNATURE: (RLMRow *)
      RETURN:
        TYPES  : RLMRow *
        DESCR  : The row.

  - g_dyn_view_get_source_ndx:
      NAME     : "rowIndexInOriginTableForRowAtIndex:"
      SUMMARY  : *g_dyn_view_get_source_ndx_summary
      DESCR    : *g_dyn_view_get_source_ndx_descr
      SIGNATURE: (NSUInteger)rowIndexInOriginTableForRowAtIndex:(NSUInteger)rowIndex
      PARAMS:
      - NAME   : rowIndex
        TYPES  : NSUInteger
        DESCR  : *g_dyn_view_get_source_ndx_parm1_descr
      RETURN:
        TYPES  : NSUInteger
        DESCR  : *g_dyn_view_get_source_ndx_return1_descr
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_source_ndx
        DESCR  :

  - g_dyn_view_remove_row:
      NAME     : "removeRowAtIndex:"
      SUMMARY  : *g_dyn_table_remove_row_summary
      DESCR    : *g_dyn_table_remove_row_descr
      SIGNATURE: (void)removeRowAtIndex:(NSUInteger)rowIndex
      PARAMS:
      - NAME   : rowIndex
        TYPES  : NSUInteger
        DESCR  : *g_dyn_view_remove_row_parm1_descr
      EXAMPLES:
      - CODE   : ex_objc_dyn_table_remove
        DESCR  :

  - g_dyn_view_remove_last_row:
      TODO     : soon
      NAME     : removeLastRow
      SUMMARY  : *g_dyn_table_remove_last_row_summary
      DESCR    : *g_dyn_table_remove_last_row_descr
      SIGNATURE: (void)removeLastRow;
      EXAMPLES:
      - CODE   : ex_objc_dyn_table_remove_last_row
        DESCR  :


#- Values:
#  METHODS:
#  - g_dyn_view_get_float:
#      TODO     : soon
#  - g_dyn_view_get_double:
#      TODO     : soon
#  - g_dyn_view_get_date:
#      NAME     : getDate
#  - g_dyn_view_get_string:
#      NAME     : getString
#  - g_dyn_view_get_binary:
#      TODO     : soon
#  - g_dyn_view_get_mixed:
#      TODO     : soon
#  - g_dyn_view_get_mixed_type:
#      TODO     : soon
#  - g_dyn_view_get_subtable_const:
#      IGNORE   : ""
#  - g_dyn_view_get_subtable:
#      TODO     : soon
#  - g_dyn_view_get_bool:
#      NAME     : getBool
#  - g_dyn_view_get_int:
#      NAME     : get
#      TITLE    : get*
#      SUMMARY  : *g_dyn_table_get_xxx_summary
#      DESCR    : *g_dyn_table_get_xxx_descr
#      SIGNATURE: |
#                 (BOOL)getBool:(NSUInteger)col_ndx ndx:(NSUInteger)ndx
#                 (int64_t)get:(NSUInteger)col_ndx ndx:(NSUInteger)ndx
#                 (time_t)getDate:(NSUInteger)col_ndx ndx:(NSUInteger)ndx
#                 (NSString *)getString:(NSUInteger)col_ndx ndx:(NSUInteger)ndx
#      CONST    : True
#      PARAMS:
#      - NAME   : column_ndx
#        TYPES  : NSUInteger
#        DESCR  : The column index.
#      - NAME   : row_ndx
#        TYPES  : NSUInteger
#        DESCR  : The row index.
#      RETURN:
#        TYPES  : [BOOL, int64_t, float, double, time_t, NSString*, BinaryData, Mixed, DataType, TableRef, ConstTableRef]
#        DESCR  : The value.
#      EXAMPLES:
#      - CODE   : ex_objc_dyn_view_get_xxx
#        DESCR  :

  # - g_dyn_view_set_bool:
  #     TODO     : soon
  # - g_dyn_view_set_int:
  #     TODO     : soon
  # - g_dyn_view_set_float:
  #     TODO     : soon
  # - g_dyn_view_set_double:
  #     TODO     : soon
  # - g_dyn_view_set_enum:
  #     TODO     : soon
  # - g_dyn_view_set_date:
  #     TODO     : soon
  # - g_dyn_view_set_string:
  #     TODO     : soon
  # - g_dyn_view_set_binary:
  #     TODO     : soon
  # - g_dyn_view_set_mixed:
  #     TODO     : soon
  #     NAME     : setMixed

  #     TITLE    : set*
  #     SUMMARY  : *g_dyn_table_set_xxx_summary
  #     DESCR    : *g_dyn_table_set_xxx_descr
  #     SIGNATURE: |
  #                void set_bool(NSUInteger column_ndx, NSUInteger row_ndx, bool value);
  #                void set_int(NSUInteger column_ndx, NSUInteger row_ndx, int64_t value);
  #                void set_float(NSUInteger column_ndx, NSUInteger row_ndx, float value);
  #                void set_double(NSUInteger column_ndx, NSUInteger row_ndx, double value);
  #                template<class E> void set_enum(NSUInteger column_ndx, NSUInteger row_ndx, E value);
  #                void set_date(NSUInteger column_ndx, NSUInteger row_ndx, time_t value);
  #                void set_string(NSUInteger column_ndx, NSUInteger row_ndx, const char* value);
  #                void set_binary(NSUInteger column_ndx, NSUInteger row_ndx, const char* value, NSUInteger len);
  #                void set_mixed(NSUInteger column_ndx, NSUInteger row_ndx, Mixed value);
  #     PARAMS:
  #     - NAME   : column_ndx
  #       TYPES  : NSUInteger
  #       DESCR  : The column index.
  #     - NAME   : row_ndx
  #       TYPES  : NSUInteger
  #       DESCR  : The row index.
  #     - NAME   : value
  #       TYPES  : [BOOL, int64_t, float, double, time_t, const char*, Mixed]
  #       DESCR  : The value.
  #     - NAME   : len
  #       TYPES  : NSUInteger
  #       DESCR  : Size in bytes of binary value.
  #     EXAMPLES:
  #     - CODE   : ex_objc_dyn_view_set_xxx
  #       DESCR  :

- Sub-tables:
  METHODS:
  - g_dyn_view_get_subtable_size:
      TODO     : later

      NAME     : get_subtable_size
      SUMMARY  : *g_dyn_table_get_subtable_size_summary
      DESCR    : *g_dyn_table_get_subtable_size_descr
      PARAMS:
      - NAME   : column_ndx
        TYPES  : NSUInteger
        DESCR  : The column index.
      - NAME   : row_ndx
        TYPES  : NSUInteger
        DESCR  : The row index.
      RETURN:
        TYPES  : NSUInteger
        DESCR  : Number of rows.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_get_subtable
        DESCR  :

  - g_dyn_view_clear_subtable:
      TODO     : later

      TITLE    : clear_subtable
      SUMMARY  : *g_dyn_table_clear_subtable_summary
      DESCR    : *g_dyn_table_clear_subtable_descr
      PARAMS:
      - NAME   : column_ndx
        TYPES  : NSUInteger
        DESCR  : The column index.
      - NAME   : row_ndx
        TYPES  : NSUInteger
        DESCR  : The row index.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_clear_subtable
        DESCR  :


# - Searching:
#   METHODS:
#   - g_dyn_table_where:
#       NAME     : where
#       SIGNATURE: (RLMQuery *) where
#       SUMMARY  : Query the view.
#       DESCR    : This method initiates a query in the view.
#       RETURN:
#         TYPES  : RLMQuery *
#         DESCR  : *g_dyn_table_where_return_descr
#       EXAMPLES:
#       - DESCR  :
#         CODE   : ex_objc_dyn_view_where


  # - g_dyn_view_find_first_bool:
  #     TODO     : soon
  # - g_dyn_view_find_first_int:
  #     TODO     : soon
  # - g_dyn_view_find_first_float:
  #     TODO     : soon
  # - g_dyn_view_find_first_double:
  #     TODO     : soon
  # - g_dyn_view_find_first_date:
  #     TODO     : soon
  # - g_dyn_view_find_first_string:
  #     TODO     : soon
  #     NAME     : findFirstString

  #     TITLE    : find*
  #     SUMMARY  : *g_dyn_table_find_first_xxx_summary
  #     DESCR    : *g_dyn_table_find_first_xxx_descr
  #     SIGNATURE: |
  #                NSUInteger find_first_int(NSUInteger column_ndx, int64_t value) const;
  #                NSUInteger find_first_bool(NSUInteger column_ndx, bool value) const;
  #                NSUInteger find_first_float(NSUInteger column_ndx, float value) const;
  #                NSUInteger find_first_double(NSUInteger column_ndx, double value) const;
  #                NSUInteger find_first_date(NSUInteger column_ndx, time_t value) const;
  #                NSUInteger find_first_string(NSUInteger column_ndx, const char* value) const;
  #     PARAMS:
  #     - NAME   : column_ndx
  #       TYPES  : NSUInteger
  #       DESCR  : The column index.
  #     - NAME   : value
  #       TYPES  : [BOOL, int64_t, float, double, time_t, const char*]
  #       DESCR  : The value.
  #     RETURN:
  #       TYPES  : NSUInteger
  #       DESCR  : "The row index or <code>NSNotFound<code> if there is no match."
  #     EXAMPLES:
  #     - CODE   : ex_objc_dyn_view_find_first_xxx
  #       DESCR  :

  # - g_dyn_view_find_all_bool_const:
  #     IGNORE   : ""
  # - g_dyn_view_find_all_int_const:
  #     IGNORE   : ""
  # - g_dyn_view_find_all_float_const:
  #     IGNORE   : ""
  # - g_dyn_view_find_all_double_const:
  #     IGNORE   : ""
  # - g_dyn_view_find_all_date_const:
  #     IGNORE   : ""
  # - g_dyn_view_find_all_string_const:
  #     IGNORE   : ""

  # - g_dyn_view_find_all_bool:
  #     NAME     : findAllBool
  # - g_dyn_view_find_all_int:
  #     NAME     : findAllInt
  # - g_dyn_view_find_all_float:
  #     NAME     : findAllFloat
  # - g_dyn_view_find_all_double:
  #     NAME     : findAllDouble
  # - g_dyn_view_find_all_date:
  #     NAME     : findAllDate
  # - g_dyn_view_find_all_string:
  #     NAME     : findAllString
  #     TODO     : soon
  #     TITLE    : findAll*
  #     SUMMARY  : *g_dyn_table_find_all_xxx_summary
  #     DESCR    : *g_dyn_table_find_all_xxx_descr
  #     SIGNATURE: |
  #                TableView      find_all_int(NSUInteger column_ndx, int64_t value);
  #                TableView      find_all_bool(NSUInteger column_ndx, bool value);
  #                TableView      find_all_date(NSUInteger column_ndx, time_t value);
  #                TableView      find_all_string(NSUInteger column_ndx, const char* value);
  #                TableView      find_all_float(NSUInteger column_ndx, float value);
  #                TableView      find_all_double(NSUInteger column_ndx, double value);
  #     PARAMS:
  #     - NAME   : column_ndx
  #       TYPES  : NSUInteger
  #       DESCR  : The column index.
  #     - NAME   : value
  #       TYPES  : [BOOL, int64_t, float, double, time_t, const char*]
  #       DESCR  : The value.
  #     RETURN:
  #       TYPES  : [TableView, ConstTableView]
  #       DESCR  : The view.
  #     EXAMPLES:
  #     - CODE   : ex_objc_dyn_view_find_all_xxx
  #       DESCR  :

  - g_dyn_view_sort:
      NAME     : sortUsingColumnWithIndex
      SUMMARY  : *g_dyn_view_get_sorted_view_summary
      DESCR    : *g_dyn_view_get_sorted_view_desc
      SIGNATURE: (void) sortUsingColumnWithIndex:(NSUInteger)colIndex
      PARAMS:
      - NAME   : colIndex
        TYPES  : NSUInteger
        DESCR  : The column index.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_sort
        DESCR  :

  - g_dyn_view_sort:
      NAME     : "sortUsingColumnWithIndex:inOrder:"
      SUMMARY  : *g_dyn_view_get_sorted_view_summary
      DESCR    : *g_dyn_view_get_sorted_view_desc
      SIGNATURE: (void) sortUsingColumnWithIndex:(NSUInteger)colIndex inOrder:(RLMSortOrder)order
      PARAMS:
      - NAME   : colIndex
        TYPES  : NSUInteger
        DESCR  : The column index.
      - NAME   : order
        TYPES  : RLMSortOrder
        DESCR  : Sorting order; either <code>RLMSortOrderAscending</code> or <code>RLMSortOrderDescending</code> (declared in <code>RLMType.h</code>)
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_sort
        DESCR  :


- Aggregates:
  METHODS:
  - g_dyn_view_sum:
      TODO     : later
  - g_dyn_view_sum_float:
      TODO     : later
  - g_dyn_view_sum_double:
      TODO     : later

      NAMES    : [sum, sum_float, sum_double]
      SUMMARY  : *g_dyn_view_sum_summary
      DESCR    : *g_dyn_view_sum_descr
      SIGNATURE: |
                 int64_t sum(NSUInteger column_ndx) const;
                 double sum_float(NSUInteger column_ndx) const;
                 double sum_double(NSUInteger column_ndx) const;
      PARAMS:
      - NAME   : column_ndx
        TYPES  : NSUInteger
        DESCR  : Column index.
      RETURN:
        TYPES  : [int64_t, float, double]
        DESCR  : The sum.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_sum
        DESCR  :

  - g_dyn_view_maximum:
      TODO     : later
  - g_dyn_view_maximum_float:
      TODO     : later
  - g_dyn_view_maximum_double:
      TODO     : later

      NAMES    : [maximum, maximum_float, maximum_double]
      SUMMARY  : *g_dyn_view_maximum_summary
      DESCR    : *g_dyn_view_maximum_descr
      CONST    : True
      SIGNATURE: |
                 int64_t maximum(NSUInteger column_ndx) const;
                 double  maximum_float(NSUInteger column_ndx) const;
                 double  maximum_double(NSUInteger column_ndx) const;
      PARAMS:
      - NAME   : column_ndx
        TYPES  : NSUInteger
        DESCR  : Column index.
      RETURN:
        TYPES  : [int64_t, double]
        DESCR  : The maximum value.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_maximum
        DESCR  :

  - g_dyn_view_minimum:
      TODO     : later
  - g_dyn_view_minimum_float:
      TODO     : later
  - g_dyn_view_minimum_double:
      TODO     : later

      NAMES    : [minimum, minimum_float, minimum_double]
      SUMMARY  : *g_dyn_view_minimum_summary
      DESCR    : *g_dyn_view_minimum_descr
      CONST    : True
      SIGNATURE: |
                 int64_t minimum(NSUInteger column_ndx) const;
                 double  minimum_float(NSUInteger column_ndx) const;
                 double  minimum_double(NSUInteger column_ndx) const;
      PARAMS:
      - NAME   : column_ndx
        TYPES  : NSUInteger
        DESCR  : Column index.
      RETURN:
        TYPES  : [int64_t, double]
        DESCR  : The minimum value.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_minimum
        DESCR  :


- Dump:
  METHODS:
  - g_dyn_view_to_json:
      TODO     : later

      NAME     : to_json
      SUMMARY  : *g_dyn_table_to_json_summary
      DESCR    : *g_dyn_view_to_json_descr
      PARAMS:
      - NAME   : out
        TYPES  : std::ostream&
        DESCR  : Output stream.
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_to_json
        DESCR  :

  - g_dyn_view_to_string:
      TODO     : later

      NAME     : to_string
      SUMMARY  : *g_dyn_view_to_string_summary
      DESCR    : *g_dyn_view_to_string_descr
      PARAMS:
      - NAME   : out
        TYPES  : std::ostream&
        DESCR  : Output stream.
      - NAME   : limit
        TYPES  : NSUInteger
        DESCR  : "The number of rows to convert. Default: 500."
      EXAMPLES:
      - CODE   : ex_objc_dyn_view_to_string
        DESCR  :
