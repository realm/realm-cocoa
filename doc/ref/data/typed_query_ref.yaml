#
# Obj-C reference documentation for Query class
#

# NOTIMPLEMENTED accessors for Subtable
# TODO: Accessors for Binary just added to API (by Kristian), now this file should be updated accordingly.
# INCONSISTENCY greater vs greaterThan
# UNCLEAR group description, findNext: the parameter name "last" was slightly confusing in same context as "next" as it was really the "stopAt" row.
# TODO: describe which column-types the methods can be used on.

ID         : class_typed_query
TITLE      : Query (typed)
SUMMARY    : *g_typed_query_intro_summary
DESCR      : *g_typed_query_intro_descr
SEE        :
EXAMPLES:
- DESCR    :
  CODE     : ex_objc_query_typed_intro
IGNORE     : []

CATEGORIES :
- Conditions:
  METHODS:
  - g_typed_query_equals_binary:
      TODO: soon
  - g_typed_query_equals_bool:
  - g_typed_query_equals_int:
  - g_typed_query_equals_float:
  - g_typed_query_equals_double:
  - g_typed_query_equals_string:
  - g_typed_query_equals_string_2:
  - g_typed_query_equals_date:
      TITLE    : "*columnIsEqualTo"
      NAMES    : [columnIsEqualTo, columnIsEqualTo, columnIsEqualTo, columnIsEqualTo, columnIsEqualTo, columnIsEqualTo, columnIsEqualTo]
      SIGNATURE: |
                 .CName (TableName_Query *)columnIsEqualTo:(BOOL)value
                 .CName (TableName_Query *)columnIsEqualTo:(int64_t)value
                 .CName (TableName_Query *)columnIsEqualTo:(float)value
                 .CName (TableName_Query *)columnIsEqualTo:(double)value
                 .CName (TableName_Query *)columnIsEqualTo:(NSString *)value
                 .CName (TableName_Query *)columnIsEqualTo:(NSString *)value caseSensitive:(BOOL)caseSensitive
                 .CName (TableName_Query *)columnIsEqualTo:(time_t)value
      SUMMARY  : *g_typed_query_equals_summary
      DESCR    : *g_typed_query_equals_descr
      PARAMS:
      - NAME   : value
        TYPES  : [BOOL, int64_t, float, double, NSString*, NSString*, time_t]
        DESCR  : *g_typed_query_value_descr
      - NAME   : caseSensitive
        TYPES  : BOOL
        DESCR  : *g_typed_query_parm_case_sensitive_descr
      RETURN:
        TYPES  : TableName_Query *
        TYPES  : TableName_Query *
        DESCR  : &g_typed_query_case_sensitive_descr_objc
                 >
                 The class of the returned object is defined by a macro.
                 The first part of the class name, specifically <code>TableName</code>, 
                 is replaced with the name of your typed table. 
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_equals

  - g_typed_query_notEquals_bool:
       TODO: soon
  - g_typed_query_notEquals_binary:
       TODO: soon
  - g_typed_query_notEquals_int:
  - g_typed_query_notEquals_float:
  - g_typed_query_notEquals_double:
  - g_typed_query_notEquals_string:
  - g_typed_query_notEquals_string_2:
  - g_typed_query_notEquals_date:
      NAMES    : [ columnIsNotEqualTo, columnIsNotEqualTo, columnIsNotEqualTo, columnIsNotEqualTo, columnIsNotEqualTo, columnIsNotEqualTo]
      TITLE    : "*columnIsNotEqualTo"
      SIGNATURE: |
                 .CName (TableName_Query *)columnIsNotEqualTo:(int64_t)value
                 .CName (TableName_Query *)columnIsNotEqualTo:(float)value
                 .CName (TableName_Query *)columnIsNotEqualTo:(double)value
                 .CName (TableName_Query *)columnIsNotEqualTo:(NSString *)value
                 .CName (TableName_Query *)columnIsNotEqualTo:(NSString *)value caseSensitive:(BOOL)caseSensitive
                 .CName (TableName_Query *)columnIsNotEqualTo:(time_t)value
      SUMMARY  : *g_typed_query_notEquals_summary
      DESCR    : *g_typed_query_notEquals_descr
      PARAMS:
      - NAME   : value
        TYPES  : [int64_t, float, double, NSString*, NSString*, time_t]
        DESCR  : *g_typed_query_value_descr
      - NAME   : caseSensitive
        TYPES  : BOOL
        DESCR  : *g_typed_query_parm_case_sensitive_descr
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_notEquals
        
  - g_typed_query_greaterThan_int:
  - g_typed_query_greaterThan_float:
  - g_typed_query_greaterThan_double:
  - g_typed_query_greaterThan_date:
      NAMES    : [ columnIsGreaterThan, columnIsGreaterThan, columnIsGreaterThan, columnIsGreaterThan ]
      TITLE    : "*columnIsGreaterThan"
      SIGNATURE: |
                 .CName (TableName_Query *)columnIsGreaterThan:(int64_t)value
                 .CName (TableName_Query *)columnIsGreaterThan:(float)value
                 .CName (TableName_Query *)columnIsGreaterThan:(double)value
                 .CName (TableName_Query *)columnIsGreaterThan:(time_t)value
      SUMMARY  : *g_typed_query_greaterThan_summary
      DESCR    : *g_typed_query_greaterThan_descr
      PARAMS:
      - NAME   : value
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_typed_query_value_descr
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_greaterThan
        
  - g_typed_query_greaterThanOrEqual_int:
  - g_typed_query_greaterThanOrEqual_float:
  - g_typed_query_greaterThanOrEqual_double:
  - g_typed_query_greaterThanOrEqual_date:
      NAMES    : [columnIsGreaterThanOrEqualTo, columnIsGreaterThanOrEqualTo, columnIsGreaterThanOrEqualTo, columnIsGreaterThanOrEqualTo]
      TITLE    : "*columnIsGreaterThanOrEqualTo"
      SIGNATURE: |
                 .CName (TableName_Query *)columnIsGreaterThanOrEqualTo:(int64_t)value
                 .CName (TableName_Query *)columnIsGreaterThanOrEqualTo:(float)value
                 .CName (TableName_Query *)columnIsGreaterThanOrEqualTo:(double)value
                 .CName (TableName_Query *)columnIsGreaterThanOrEqualTo:(time_t)value
      SUMMARY  : *g_typed_query_greaterThanOrEqual_summary
      DESCR    : *g_typed_query_greaterThanOrEqual_descr
      PARAMS:
      - NAME   : value
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_typed_query_value_descr
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_greaterThanOrEqual

  - g_typed_query_lessThan_int:
  - g_typed_query_lessThan_float:
  - g_typed_query_lessThan_double:
  - g_typed_query_lessThan_date:
      NAMES    : [columnIsLessThan, columnIsLessThan, columnIsLessThan, columnIsLessThan]
      TITLE    : "*columnIsLessThan"
      SIGNATURE: |
                 .CName (TableName_Query *)columnIsLessThan:(int64_t)value
                 .CName (TableName_Query *)columnIsLessThan:(float)value
                 .CName (TableName_Query *)columnIsLessThan:(double)value
                 .CName (TableName_Query *)columnIsLessThan:(time_t)value
      SUMMARY  : *g_typed_query_lessThan_summary
      DESCR    : *g_typed_query_lessThan_descr
      PARAMS:
      - NAME   : value
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_typed_query_value_descr
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_lessThan
        
  - g_typed_query_lessThanOrEqual_int:
  - g_typed_query_lessThanOrEqual_float:
  - g_typed_query_lessThanOrEqual_double:
  - g_typed_query_lessThanOrEqual_date:
      NAMES    : [columnIsLessThanOrEqualTo, columnIsLessThanOrEqualTo, columnIsLessThanOrEqualTo, columnIsLessThanOrEqualTo]
      TITLE    : "*columnIsLessThanOrEqualTo"
      SIGNATURE: |
                 .CName (TableName_Query *)columnIsLessThanOrEqualTo:(int64_t)value
                 .CName (TableName_Query *)columnIsLessThanOrEqualTo:(float)value
                 .CName (TableName_Query *)columnIsLessThanOrEqualTo:(double)value
                 .CName (TableName_Query *)columnIsLessThanOrEqualTo:(time_t)value
      SUMMARY  : *g_typed_query_lessThanOrEqual_summary
      DESCR    : *g_typed_query_lessThanOrEqual_descr
      PARAMS:
      - NAME   : value
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_typed_query_value_descr
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_lessThanOrEqual
        
  - g_typed_query_between_int:
  - g_typed_query_between_float:
  - g_typed_query_between_double:
  - g_typed_query_between_date:
      NAMES    : ["columnIsBetween:and_:", "columnIsBetween:and_:", "columnIsBetween:and_:", "columnIsBetween:and_:"]
      TITLE    : "*columnIsBetween"
      SIGNATURE: |
                 .CName (TableName_Query *)columnIsBetween:(int64_t)from and_:(int64_t)to
                 .CName (TableName_Query *)columnIsBetween:(float)from and_:(float)to
                 .CName (TableName_Query *)columnIsBetween:(double)from and_:(double)to
                 .CName (TableName_Query *)columnIsBetween:(time_t)from and_:(time_t)to
      DESCR    : *g_typed_query_between_descr
      SUMMARY  : *g_typed_query_between_summary
      PARAMS:
      - NAME   : from
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_typed_query_between_parm1_descr
      - NAME   : to
        TYPES  : [int64_t, time_t]
        DESCR  : *g_typed_query_between_parm2_descr
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_between
        
  - g_typed_query_startsWith_binary:
      TODO: soon
  - g_typed_query_startsWith_string:
      NAME     : columnBeginsWith
  - g_typed_query_startsWith_string_2:
      NAME     : columnBeginsWith
      TITLE    : "*columnBeginsWith"
      SIGNATURE: |
                 .CName (TableName_Query *)columnBeginsWith:(NSString *)value
                 .CName (TableName_Query *)columnBeginsWith:(NSString *)value caseSensitive:(BOOL)
      DESCR    : *g_typed_query_startsWith_descr
      SUMMARY  : *g_typed_query_startsWith_summary
      PARAMS:
      - NAME   : value
        TYPES  : NSString *
        DESCR  : *g_typed_query_value_descr
      - NAME   : caseSensitive
        TYPES  : BOOL
        DESCR  : *g_typed_query_parm_case_sensitive_descr
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_startsWith
        
  - g_typed_query_endsWith_binary:
      TODO: soon
  - g_typed_query_endsWith_string:
      NAME     : columnEndsWith
  - g_typed_query_endsWith_string_2:
      NAME     : columnEndsWith
      TITLE    : "*columnEndsWith"
      SIGNATURE: |
                 .CName (TableName_Query *)columnEndsWith:(NSString *)value
                 .CName (TableName_Query *)columnEndsWith:(NSString *)value caseSensitive:(BOOL)caseSensitive
      DESCR    : *g_typed_query_endsWith_descr
      SUMMARY  : *g_typed_query_endsWith_summary
      PARAMS:
      - NAME   : value
        TYPES  : NSString *
        DESCR  : *g_typed_query_value_descr
      - NAME   : caseSensitive
        TYPES  : BOOL
        DESCR  : *g_typed_query_parm_case_sensitive_descr
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_endsWith
        
  - g_typed_query_contains_binary:
      TODO: soon
  - g_typed_query_contains_string:
  - g_typed_query_contains_string_2:
      NAMES    : [columnContains, columnContains]
      TITLE    : "*columnContains"
      SIGNATURE: |
                 .CName (TableName_Query *)columnContains:(NSString *)value
                 .CName (TableName_Query *)columnContains:(NSString *)value caseSensitive:(BOOL)
      DESCR    : *g_typed_query_contains_descr
      SUMMARY  : *g_typed_query_contains_summary
      PARAMS:
      - NAME   : value
        TYPES  : NSString*
        DESCR  : *g_typed_query_value_descr
      - NAME   : caseSensitive
        TYPES  : BOOL
        DESCR  : *g_typed_query_parm_case_sensitive_descr
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_contains

- Combiners:
  METHODS:
  - g_typed_query_group:
      NAME     : group
      SIGNATURE: (TableName_Query *)group
      DESCR    : *g_typed_query_group_descr
      SUMMARY  : *g_typed_query_group_summary
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_group
        
  - g_typed_query_endGroup:
      NAME     : endGroup
      SIGNATURE: (TableName_Query *)endgroup
      DESCR    : *g_typed_query_endGroup_descr
      SUMMARY  : *g_typed_query_endGroup_summary
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_group

  - g_typed_query_or:
      NAME     : or
      SIGNATURE: (TableName_Query *)or
      DESCR    : *g_typed_query_or_descr
      SUMMARY  : *g_typed_query_or_summary
      RETURN:
        TYPES  : TableName_Query *
        DESCR  : *g_typed_query_query_object_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_or

  - g_typed_query_subtable:
      TODO: soon
  - g_typed_query_endSubtable:
      TODO: soon
  
- Actions:
  METHODS:
  - g_typed_query_find_all_const:
      IGNORE   : "const"
  - g_typed_query_find_all:
      TODO: soon - with start,end,limit
  - g_typed_query_find_all_2:
      NAME     : findAll
      DESCR    : *g_typed_query_find_all_descr
      SUMMARY  : *g_typed_query_find_all_summary
      SIGNATURE: (TableName_View *)findAll
      RETURN:
        TYPES  : TableName_View *
        DESCR  : &g_typed_query_view_return_descr
                 >
                 The query result is represented as a <code>TableName_View</code>. 
                 Note that part of the class name, specifically <code>TableName</code>, 
                 is replaced with the name of your specific table.
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_findall
        
  - g_typed_query_find:
      NAMES    : find
      SIGNATURE: |
                 (size_t)find:(size_t)last
      DESCR    : *g_typed_query_find_descr
      SUMMARY  : *g_typed_query_find_summary
      PARAMS:
      - NAME   : last
        TYPES  : size_t
        DESCR  : *g_typed_query_find_parm_lastmatch_descr
      RETURN:
        TYPES  : size_t
        DESCR  : *g_typed_query_find_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_find
        

        
  - g_typed_query_size:
      NAMES    : count
      SIGNATURE: (size_t)count
      DESCR    : *g_typed_query_size_descr
      SUMMARY  : *g_typed_query_size_summary
      RETURN:
        TYPES  : size_t
        DESCR  : *g_typed_query_size_return1_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_size
      
  - g_typed_query_sum:
      TODO: soon (+ start, end, limit)
  - g_typed_query_sum_float:
      TODO: soon (+ start, end, limit)
  - g_typed_query_sum_double:
      TODO: soon (+ start, end, limit)
  - g_typed_query_sum_2:
      NAME     : sum
  - g_typed_query_sum_float_2:
      NAME     : sum
  - g_typed_query_sum_double_2:
      NAME     : sum
      TITLE    : "*sum"
      DESCR    : *g_typed_query_sum_descr
      SUMMARY  : *g_typed_query_sum_summary
      SIGNATURE: |
                 .CName (int64_t)sum
                 .CName (double)sum
      RETURN:
        TYPES  : [int64_t, double, double]
        DESCR  : *g_typed_query_sum_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_sum
        
  - g_typed_query_maximum:
      TODO: soon (+ start, end, limit)
  - g_typed_query_maximum_float:
      TODO: soon (+ start, end, limit)
  - g_typed_query_maximum_double:
      TODO: soon (+ start, end, limit)
  - g_typed_query_maximum_date:
      TODO: soon (+ start, end, limit)
  - g_typed_query_maximum_date:
      TODO: soon
  - g_typed_query_maximum_2:
      NAME     : max
  - g_typed_query_maximum_float_2:
      NAME     : max
  - g_typed_query_maximum_double_2:
      NAME     : max
      TITLE    : "*maximum"
      DESCR    : *g_typed_query_maximum_descr
      SUMMARY  : *g_typed_query_maximum_summary
      SIGNATURE: |
                 .CName (int64_t)maximum
                 .CName (float)maximum
                 .CName (double)maximum
      RETURN:
        TYPES  : [int64_t, float, double]
        DESCR  : *g_typed_query_maximum_return1_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_maximum
 
  - g_typed_query_minimum:
      TODO: soon (+ start, end, limit)
  - g_typed_query_minimum_float:
      TODO: soon (+ start, end, limit)
  - g_typed_query_minimum_double:
      TODO: soon (+ start, end, limit)
  - g_typed_query_minimum_date:
      TODO: soon (+ start, end, limit)
  - g_typed_query_minimum_date:
      TODO: soon
  - g_typed_query_minimum_2:
      NAME     : min
  - g_typed_query_minimum_float_2:
      NAME     : min
  - g_typed_query_minimum_double_2:
      NAME     : min
      TITLE    : "*minimum"
      DESCR    : *g_typed_query_minimum_descr
      SUMMARY  : *g_typed_query_minimum_summary
      SIGNATURE: |
                 .CName (int64_t)minimum
                 .CName (float)minimum
                 .CName (double)minimum
      RETURN:
        TYPES  : [int64_t, float, double]
        DESCR  : *g_typed_query_minimum_return1_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_manimum
        
  - g_typed_query_average:
      TODO: soon (+ start, end, limit)
  - g_typed_query_average_float:
      TODO: soon (+ start, end, limit)
  - g_typed_query_average_double:
      TODO: soon (+ start, end, limit)
  - g_typed_query_average_2:
      NAME     : avg
  - g_typed_query_average_float_2:
      NAME     : avg
  - g_typed_query_average_double_2:
      NAME     : avg
      TITLE    : "*average"
      SUMMARY  : *g_typed_query_average_summary
      DESCR    : *g_typed_query_average_descr
      SIGNATURE: .CName (double)average
      RETURN:
        TYPES  : double
        DESCR  : *g_typed_query_average_return1_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_average
        
  - g_typed_query_remove:
      NAMES    : remove
      SIGNATURE: |
                 (NSNumber *)remove
      DESCR    : *g_typed_query_remove_descr
      SUMMARY  : *g_typed_query_remove_summary
      RETURN:
        TYPES  : NSNumber *
        DESCR  : *g_typed_query_remove_return1_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_typed_query_remove
