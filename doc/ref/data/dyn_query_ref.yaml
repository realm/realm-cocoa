#
# Obj-C reference documentation for Query class
#

## TODO: Describe limitations about using correct versions of the methods on the right column_types.
## TODO: Detail what is allowed to pass in parameters (index within size() etc)
## TODO: Describe start, end index parameters in searches. end is not inclusive.

## JJEPSEN: "or" a obj-c keyword?
## JJEPSEN: count() does not take a column index as parameter (like in c++)
## JJEPSEN: max, min not defined for time compare as in c++.
## !! Do we at all have a dynamic query interface?
## !! All the Conditions don't take a colIndex...
## All the Combiners return (void) - don't they return TightdbQuery ? - check-&-fix


ID         : class_dyn_query
TITLE      : Query  (dynamic)
SUMMARY    : *g_dyn_query_intro_summary
DESCR      : *g_dyn_query_intro_descr
SEE        :
EXAMPLES   :
- DESCR:
  CODE     : ex_objc_query_dynamic_intro
IGNORE     : []                   # List of method-ids to ignore

CATEGORIES :
- Conditions:
  METHODS:
  - g_dyn_query_equals_binary:
#      TODO     : soon
      NAME     : "binaryIsEqualTo:inColumnWithIndex:"
  - g_dyn_query_equals_boolean:
#      TODO     : soon
      NAME     : "BoolIsEqualTo:inColumnWithIndex:"
  - g_dyn_query_equals_integer:
#      TODO     : soon
      NAME     : "intIsEqualTo:inColumnWithIndex:"
  - g_dyn_query_equals_float:
#      TODO     : soon
      NAME     : "floatIsEqualTo:inColumnWithIndex:"
  - g_dyn_query_equals_double:
#      TODO     : soon
      NAME     : "doubleIsEqualTo:inColumnWithIndex:"
  - g_dyn_query_equals_string:
#      TODO     : soon
      NAME     : "stringIsEqualTo:inColumnWithIndex:"
  - g_dyn_query_equals_string_2:
#      TODO     : soon
      NAME     : "stringIsCaseInsensitiveEqualTo:inColumnWithIndex:"
  - g_dyn_query_equals_date:
      NAME     : "dateIsEqualTo:inColumnWithIndex:"
      TITLE    : "*IsEqualTo:inColumnWithIndex:"
# Not yet implemented in API
#      TODO     : soon
#      NAMES    : [ equal, equal, equal, equal, equal, equal, equal]
      SIGNATURE: |
                  (TDBQuery *)boolIsEqualTo:(bool)aBool inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)intIsEqualTo:(int64_t)anInt inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)floatIsEqualTo:(float)aFloat inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)doubleIsEqualTo:(double)aDouble inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)stringIsEqualTo:(NSString *)aString inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)stringIsCaseInsensitiveEqualTo:(NSString *)aString inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)dateIsEqualTo:(time_t)aDate inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)binaryIsEqualTo:(TDBBinary *)aBinary inColumnWithIndex:(NSUInteger)colIndex
      SUMMARY  : *g_dyn_query_equals_summary
      DESCR    : *g_dyn_query_equals_descr
      PARAMS:
      - NAME   : value
        TYPES  : [BOOL, int64_t, float, double, NSString*, BinaryData, time_t]
        DESCR  : *g_dyn_query_value_descr
      - NAME   : colIndex
        TYPES  : NSUInteger
        DESCR  : *g_dyn_query_column_index_descr
      RETURN:
        TYPES  : TDBbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_equals

  - g_dyn_query_notEquals_bool:
      NAME     : "isNotEqualToBoolean:"
  - g_dyn_query_notEquals_binary:
      NAME     : "isNotEqualToBinary:"
  - g_dyn_query_notEquals_integer:
      NAME     : "isNotEqualToInteger:"
  - g_dyn_query_notEquals_float:
      NAME     : "isNotEqualToFloat:"
  - g_dyn_query_notEquals_double:
      NAME     : "isNotEqualToDouble:"
  - g_dyn_query_notEquals_string:
      NAME     : "isNotEqualToString"
  - g_dyn_query_notEquals_string_2:
      NAME     : "sNotEqualToString:caseSensitive:"
  - g_dyn_query_notEquals_date:
# Not yet implemented in API
      NAME     : "isNotEqualToDate:"
      TITLE    : "*isNotEqualTo:inColumnWithIndex:"
#      NAMES    : [ notEqual, notEqual, notEqual, notEqual, notEqual, notEqual ]
      SIGNATURE: |
                  (TDBQuery *)intIsNotEqualTo:(int64_t)anInt inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)floatIsNotEqualTo:(float)aFloat inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)doubleIsNotEqualTo:(double)aDouble inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)stringIsNotEqualTo:(NSString *)aString inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)stringIsNotCaseInsensitiveEqualTo:(NSString *)aString inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)dateIsNotEqualTo:(time_t)aDate inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)binaryIsNotEqualTo:(TDBBinary *)aBinary inColumnWithIndex:(NSUInteger)colIndex
      SUMMARY  : *g_dyn_query_notEquals_summary
      DESCR    : *g_dyn_query_notEquals_descr
      PARAMS:
      - NAME   : value
        TYPES  : [BOOL, int64_t, float, double, NSString*, time_t]
        DESCR  : *g_dyn_query_value_descr
      - NAME   : colIndex
        TYPES  : NSUInteger
        DESCR  : *g_dyn_query_column_index_descr
      RETURN:
        TYPES  : TDBQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_notEquals

  - g_dyn_query_greaterThan_integer:
      NAME     : "isGreaterThanInt:"
  - g_dyn_query_greaterThan_float:
      NAME     : "isGreaterThanFloat:"
  - g_dyn_query_greaterThan_double:
      NAME     : "isGreaterThanDouble:"
  - g_dyn_query_greaterThan_date:
# Not yet implemented in API
      NAME     : "isGreaterThanDate:"
      TITLE    : "*isGreaterThan:inColumnWithIndex:"
#TODO: check greater_date? does time_t work as int64_t?
      SIGNATURE: |
                 (TDBQuery *)dateIsGreaterThan:(time_t)aDate inColumnWithIndex:(NSUInteger)colIndex
                 (TDBQuery *)intIsGreaterThan:(int64_t)anInt inColumnWithIndex:(NSUInteger)colIndex
                 (TDBQuery *)floatIsGreaterThan:(float)aFloat inColumnWithIndex:(NSUInteger)colIndex
                 (TDBQuery *)doubleIsGreaterThan:(double)aDouble inColumnWithIndex:(NSUInteger)colIndex
      SUMMARY  : *g_dyn_query_greaterThan_summary
      DESCR    : *g_dyn_query_greaterThan_descr
      PARAMS:
      - NAME   : value
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_dyn_query_value_descr
      - NAME   : colIndex
        TYPES  : NSUInteger
        DESCR  : *g_dyn_query_column_index_descr
      RETURN:
        TYPES  : TDBuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_greaterThan

  - g_dyn_query_greaterThanOrEqual_integer:
      NAME     : "isGreaterThanOrEqualToInt:"
  - g_dyn_query_greaterThanOrEqual_float:
      NAME     : "isGreaterThanOrEqualToFlaot:"
  - g_dyn_query_greaterThanOrEqual_double:
      NAME     : "isGreaterThanOrEqualToDouble:"
  - g_dyn_query_greaterThanOrEqual_date:
      NAME     : "isGreaterThanOrEqualToDate:"
      TITLE    : "*isGreaterThanOrEqualTo:inColumnWithIndex:"
      SIGNATURE: |
                  (TDBQuery *)dateIsGreaterThanOrEqualTo:(time_t)aDate inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)intIsGreaterThanOrEqualTo:(int64_t)anInt inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)floatIsGreaterThanOrEqualTo:(float)aFloat inColumnWithIndex:(NSUInteger)colIndex
                  (TDBQuery *)doubleIsGreaterThanOrEqualTo:(double)aDouble inColumnWithIndex:(NSUInteger)colIndex
      SUMMARY  : *g_dyn_query_greaterThanOrEqual_summary
      DESCR    : *g_dyn_query_greaterThanOrEqual_descr
      PARAMS:
      - NAME   : value
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_dyn_query_value_descr
      - NAME   : colIndex
        TYPES  : NSUInteger
        DESCR  : *g_dyn_query_column_index_descr
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_greaterThanOrEqual

  - g_dyn_query_lessThan_integer:
      NAME     : "isLessThanInt:"
  - g_dyn_query_lessThan_float:
      NAME     : "isLessThanFloat:"
  - g_dyn_query_lessThan_double:
      NAME     : "isLessThanDouble:"
  - g_dyn_query_lessThan_date:
      NAME     : "isLessThanDate:"
      TITLE    : "isLessThan"
      SIGNATURE: |
                 - (TightdbQuery *)column:(size_t)colNdx isLessThanInt:(int64_t)value
                 - (TightdbQuery *)column:(size_t)colNdx isLessThanFloat:(float)value
                 - (TightdbQuery *)column:(size_t)colNdx isLessThanDouble:(double)value
                 - (TightdbQuery *)column:(size_t)colNdx isLessThanDate:(time_t)value
      SUMMARY  : *g_dyn_query_lessThan_summary
      DESCR    : *g_dyn_query_lessThan_descr
      PARAMS:
      - NAME   : colNdx
        TYPES  : size_t
        DESCR  : *g_dyn_query_column_index_descr
      - NAME   : value
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_dyn_query_value_descr
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_lessThan

  - g_dyn_query_lessThanOrEqual_integer:
      NAME     : "isLessThanOrEqualToInt:"
  - g_dyn_query_lessThanOrEqual_float:
      NAME     : "isLessThanOrEqualToFloat:"
  - g_dyn_query_lessThanOrEqual_double:
      NAME     : "isLessThanOrEqualToDouble:"
  - g_dyn_query_lessThanOrEqual_date:
      NAME     : "isLessThanOrEqualToDate"
      TITLE    : "isLessThanOrEqualTo"
      SIGNATURE: |
                 - (TightdbQuery *)column:(size_t)colNdx isLessThanOrEqualToInt:(int64_t)value
                 - (TightdbQuery *)column:(size_t)colNdx isLessThanOrEqualToFloat:(float)value
                 - (TightdbQuery *)column:(size_t)colNdx isLessThanOrEqualToDouble:(double)value
                 - (TightdbQuery *)column:(size_t)colNdx isLessThanOrEqualToDate:(time_t)value
      SUMMARY  : *g_dyn_query_lessThanOrEqual_summary
      DESCR    : *g_dyn_query_lessThanOrEqual_descr
      PARAMS:
      - NAME   : colNdx
        TYPES  : size_t
        DESCR  : *g_dyn_query_column_index_descr
      - NAME   : value
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_dyn_query_value_descr
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_lessThanOrEqual

  - g_dyn_query_between_integer:
      NAME     : "isBetweenInt:"
  - g_dyn_query_between_float:
      NAME     : "isBetweenFloat:"
  - g_dyn_query_between_double:
      NAME     : "isBetweenDouble:"
  - g_dyn_query_between_date:
      NAME     : "isBetweenDate:"
      TITLE    : "isBetween"
      SIGNATURE: |
                 - (TightdbQuery *)column:(size_t)colNdx isBetweenInt:(int64_t)from and:(int64_t)to
                 - (TightdbQuery *)column:(size_t)colNdx isBetweenFloat:(float)from and:(float)to
                 - (TightdbQuery *)column:(size_t)colNdx isBetweenDouble:(double)from and:(double)to
                 - (TightdbQuery *)column:(size_t)colNdx isBetweenDate:(time_t)from and:(time_t)to
      DESCR    : *g_dyn_query_between_descr
      SUMMARY  : *g_dyn_query_between_summary
      PARAMS:
      - NAME   : colNdx
        TYPES  : size_t
        DESCR  : *g_dyn_query_column_index_descr
      - NAME   : from
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_dyn_query_between_parm1_descr
      - NAME   : to
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_dyn_query_between_parm2_descr
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_between

  - g_dyn_query_startsWith_binary:
      TODO     : soon
  - g_dyn_query_startsWith_string:
      TODO     : soon
      NAME     : beginsWith
  - g_dyn_query_startsWith_string_2:
      TODO     : soon
      NAME     : beginsWith
      SIGNATURE: |
                 (TightdbQuery *)beginsWith:(NSString *)value caseSensitive:(BOOL)caseSensitive
#                (TightdbQuery *)beginsWith:(NSString *)value
      DESCR    : *g_dyn_query_startsWith_descr
      SUMMARY  : *g_dyn_query_startsWith_summary
      PARAMS:
      - NAME   : col_ndx
        TYPES  : size_t
        DESCR  : *g_dyn_query_column_index_descr
      - NAME   : value
        TYPES  : NSString *
        DESCR  : *g_dyn_query_value_descr
      - NAME   : caseSensitive
        TYPES  : BOOL
        DESCR  : *g_dyn_query_case_sensitive_descr
      RETURN:
        TYPES  : TightdbQuery
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_startsWith

  - g_dyn_query_endsWith_binary:
      TODO     : soon
  - g_dyn_query_endsWith_string:
      TODO     : soon
      NAME     : endsWith
  - g_dyn_query_endsWith_string_2:
      TODO     : soon
      NAME     : endsWith
      SIGNATURE: |
                 (TightdbQuery *)endsWith:(NSString *)value caseSensitive:(BOOL)caseSensitive
#                (TightdbQuery *)endsWith:(NSString *)value
      DESCR    : *g_dyn_query_endsWith_descr
      SUMMARY  : *g_dyn_query_endsWith_summary
      PARAMS:
      - NAME   : col_ndx
        TYPES  : size_t
        DESCR  : *g_dyn_query_column_index_descr
      - NAME   : value
        TYPES  : NSString*
        DESCR  : *g_dyn_query_value_descr
      - NAME   : caseSensitive
        TYPES  : BOOL
        DESCR  : *g_dyn_query_case_sensitive_descr
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_endsWith

  - g_dyn_query_contains_binary:
      TODO     : soon
  - g_dyn_query_contains_string:
      NAME     : contains
      TODO     : soon
  - g_dyn_query_contains_string_2:
      TODO     : soon
      NAME     : contains
      SIGNATURE: |
                 (TightdbQuery *)contains:(NSString *)value caseSensitive:(BOOL)caseSensitive
                 (TightdbQuery *)contains:(NSString *)value
#                 TightdbQuery * contains_binary(size_t column_ndx, NSString* data, size_t size);
      DESCR    : *g_dyn_query_contains_descr
      SUMMARY  : *g_dyn_query_contains_summary
      PARAMS:
      - NAME   : col_ndx
        TYPES  : size_t
        DESCR  : *g_dyn_query_column_index_descr
      - NAME   : value
        TYPES  : NSString *
        DESCR  : *g_dyn_query_value_descr
      - NAME   : caseSensitive
        TYPES  : BOOL
        DESCR  : *g_dyn_query_case_sensitive_descr
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_contains


- Combiners:
  METHODS:
  - g_dyn_query_group:
      NAMES    : group
      DESCR    : *g_dyn_query_group_descr
      SUMMARY  : *g_dyn_query_group_summary
      SIGNATURE: (void)group
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_group

  - g_dyn_query_endGroup:
      NAMES    : endGroup
      DESCR    : *g_dyn_query_endGroup_descr
      SUMMARY  : *g_dyn_query_endGroup_summary
      SIGNATURE: (void)endgroup
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_group

  - g_dyn_query_or:
      NAMES    : or
      DESCR    : *g_dyn_query_or_descr
      SUMMARY  : *g_dyn_query_or_summary
      SIGNATURE: (void)or
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_or

  - g_dyn_query_subtable:
      NAMES    : subtable
      DESCR    : *g_dyn_query_subtable_descr
      SUMMARY  : *g_dyn_query_subtable_summary
      SIGNATURE: (void)subtable:(size_t)column
      PARAMS:
      - NAME   : column
        TYPES  : size_t
        DESCR  : *g_dyn_query_column_index_descr
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_subtable

  - g_dyn_query_endSubtable:
      NAMES    : parent
      DESCR    : *g_dyn_query_endSubtable_descr
      SUMMARY  : *g_dyn_query_endSubtable_summary
      SIGNATURE: (void)parent
      RETURN:
        TYPES  : TightdbQuery *
        DESCR  : *g_dyn_query_return_query_object_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_subtable


- Actions:
  METHODS:
  - g_dyn_query_find_all_const:
      IGNORE   : ""
  - g_dyn_query_find_all_2:
      TODO     : later
  - g_dyn_query_find_all:
      NAME     : findAll
      TITLE    : findAll
      DESCR    : *g_dyn_query_find_all_descr
      SUMMARY  : *g_dyn_query_find_all_summary
      SIGNATURE: |
                 - (TableView *)findAll;
#      PARAMS:
#      - NAME   : start
#        TYPES  : size_t
#        DESCR  : *g_dyn_query_find_all_parm1_descr
#      - NAME   : end
#        TYPES  : size_t
#        DESCR  : *g_dyn_query_find_all_parm2_descr
#      - NAME   : limit
#        TYPES  : size_t
#        DESCR  : *g_dyn_query_find_all_parm3_descr
      RETURN:
        TYPES  : TableView *
        DESCR  : *g_dyn_query_find_all_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_findall

  - g_dyn_query_find:
      NAMES    : find
      DESCR    : *g_dyn_query_find_descr
      SUMMARY  : *g_dyn_query_find_summary
      SIGNATURE: |
                 - (size_t)find:(size_t)lastMatch
      PARAMS:
      - NAME   : lastMatch
        TYPES  : size_t
        DESCR  : *g_dyn_query_find_parm1_descr
      RETURN:
        TYPES  : size_t
        DESCR  : *g_dyn_query_find_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_find

  - g_dyn_query_count:
      NAME     : count
      DESCR    : *g_dyn_query_size_descr
      SUMMARY  : *g_dyn_query_size_summary
      SIGNATURE: (size_t)count
      CONST    : true
      PARAMS:
      - NAME   : column
        DESCR  : *g_dyn_query_column_index_descr
        TYPES  : size_t
      - NAME   : start
        TYPES  : size_t
        DESCR  : *g_dyn_query_count_parm2_descr
      - NAME   : end
        TYPES  : size_t
        DESCR  : *g_dyn_query_count_parm3_descr
      - NAME   : limit
        TYPES  : size_t
        DESCR  : *g_dyn_query_count_parm4_descr
      RETURN:
        TYPES  : size_t
        DESCR  : *g_dyn_query_count_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_size

  - g_dyn_query_sum_int:
      NAME     : sumInt
  - g_dyn_query_sum_float:
      NAME     : sumFloat
  - g_dyn_query_sum_double:
      NAME     : sumDouble
      TITLE    : sumWith*Column
      DESCR    : *g_dyn_query_sum_descr
      SUMMARY  : *g_dyn_query_sum_summary
      SIGNATURE: |
                 (int64_t)sumWithIntColumn:(size_t)colNdx
                 (double)sumWithFloatColumn:(size_t)colNdx
                 (double)sumWithDoubleColumn:(size_t)colNdx
      PARAMS:
      - NAME   : colNdx
        DESCR  : Column index. The datatype of the column must match the function called.
        TYPES  : size_t
      RETURN:
        TYPES  : [int64_t, double]
        DESCR  : *g_dyn_query_sum_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_sum

  - g_dyn_query_maximum_double:
      NAME     : maxDouble
  - g_dyn_query_maximum_float:
      NAME     : maxFloat
  - g_dyn_query_maximum_date:
      TODO     : later
      NAME     : maxDate
  - g_dyn_query_maximum_int:
      NAME     : maxInt
      TITLE    : maximumWith*Column
      DESCR    : *g_dyn_query_maximum_descr
      SUMMARY  : *g_dyn_query_maximum_summary
      SIGNATURE: |
                 (int64_t)maximumWithIntColumn:(size_t)colNdx
                 (float)maximumWithFloatColumn:(size_t)colNdx
                 (double)maximumWithDoubleColumn:(size_t)colNdx
      PARAMS:
      - NAME   : colNdx
        DESCR  : Column index. The datatype of the column must match the function called.
        TYPES  : size_t
      RETURN:
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_dyn_query_maximum_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_maximum

  - g_dyn_query_minimum_date:
      TODO     : later
      NAME     : minDate
  - g_dyn_query_minimum_double:
      NAME     : minDouble
  - g_dyn_query_minimum_float:
      NAME     : minFloat
  - g_dyn_query_minimum_int:
      NAME     : minInt
      TITLE    : minimumWith*Column
      DESCR    : *g_dyn_query_minimum_descr
      SUMMARY  : *g_dyn_query_minimum_summary
      SIGNATURE: |
                 (int64_t)minWithIntColumn:(size_t)colNdx
                 (float)minWithFloatColumn:(size_t)colNdx
                 (double)minWithDoubleColumn:(size_t)colNdx
      PARAMS:
      - NAME   : colNdx
        DESCR  : Column index. The datatype of the column must match the function called. E.g. <code>minFloat()</code> can only be used on columns which contains floats.
        TYPES  : size_t
      RETURN:
        TYPES  : [int64_t, float, double, time_t]
        DESCR  : *g_dyn_query_minimum_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_minimum

  - g_dyn_query_average_int:
      NAME     : avgInt
  - g_dyn_query_average_float:
      NAME     : avgFloat
  - g_dyn_query_average_double:
      NAME     : avgDouble
      TITLE    : averageWith*Column
      SUMMARY  : *g_dyn_query_average_summary
      DESCR    : *g_dyn_query_average_descr
      SIGNATURE: |
                 (double)averageWithIntColumn:(size_t)colNdx
                 (double)averageWithFloatColumn:(size_t)colNdx
                 (double)averageWithDoubleColumn:(size_t)colNdx
      PARAMS:
      - NAME   : colNdx
        DESCR  : Column index. The datatype of the column must match the function called.
        TYPES  : size_t
      RETURN:
        TYPES  : double
        DESCR  : *g_dyn_query_average_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_average

  - g_dyn_query_remove:
      NAMES    : remove
      DESCR    : *g_dyn_query_remove_descr
      SUMMARY  : *g_dyn_query_remove_summary
      SIGNATURE: (NSNumber *)remove
#      PARAMS:
#      - NAME   : column
#        DESCR  : *g_dyn_query_column_index_descr
#        TYPES  : size_t
#      - NAME   : resultcount
#        DESCR  : The number of rows used to calculate the average.
#        TYPES  : size_t*
#      - NAME   : start
#        TYPES  : size_t
#        DESCR  : "Row to begin search. Default: 0."
#     - NAME   : end
#        TYPES  : size_t
#        DESCR  : "Row to stop search. Default: -1 (infinity)."
#      - NAME   : limit
#        TYPES  : size_t
#        DESCR  : "Maximum number of rows to find. Default: -1 (infinity)."
      RETURN:
        TYPES  : NSNumber *
        DESCR  : *g_dyn_query_remove_return_descr
      EXAMPLES:
      - DESCR  :
        CODE   : ex_objc_dyn_query_remove
